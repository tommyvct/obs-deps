; Listing generated by Microsoft (R) Optimizing Compiler Version 19.28.29335.0 

	TTL	c:\users\ws103\desktop\zlib-1.2.11\compress.c
	ARM64

	AREA	|.drectve|, DRECTVE

	EXPORT	|??_C@_06CJNJFBNP@1?42?411@| [ DATA ]	; `string'

	AREA	|.rdata|, DATA, READONLY
|??_C@_06CJNJFBNP@1?42?411@| DCB "1.2.11", 0x0		; `string'
	EXPORT	|compressBound|
	EXPORT	|compress|
	EXPORT	|compress2|

	AREA	|.pdata|, PDATA
|$pdata$compress2| DCD imagerel |$LN17|
	DCD	0x56500ed
	;Flags[SingleProEpi] functionLength[236] RegF[0] RegI[5] H[0] frameChainReturn[Chained] frameSize[160]
; Function compile flags: /Ogtp
; File C:\Users\ws103\Desktop\zlib-1.2.11\compress.c

	AREA	|.text$mn|, CODE, ARM64

  00000		 |compress2| PROC

; 28   : {

  00000		 |$LN17|
  00000	a9bd53f3	 stp         x19,x20,[sp,#-0x30]!
  00004	a9015bf5	 stp         x21,x22,[sp,#0x10]
  00008	f90013f7	 str         x23,[sp,#0x20]
  0000c	a9b97bfd	 stp         fp,lr,[sp,#-0x70]!
  00010	910003fd	 mov         fp,sp
  00014	aa0103f7	 mov         x23,x1

; 29   :     z_stream stream;
; 30   :     int err;
; 31   :     const uInt max = (uInt)-1;
; 32   :     uLong left;
; 33   : 
; 34   :     left = *destLen;
; 35   :     *destLen = 0;
; 36   : 
; 37   :     stream.zalloc = (alloc_func)0;

  00018	a9047fff	 stp         xzr,xzr,[sp,#0x40]
  0001c	aa0003f5	 mov         x21,x0
  00020	b94002f4	 ldr         w20,[x23]

; 38   :     stream.zfree = (free_func)0;
; 39   :     stream.opaque = (voidpf)0;

  00024	f9002bff	 str         xzr,[sp,#0x50]
  00028	aa0203f6	 mov         x22,x2
  0002c	b90002ff	 str         wzr,[x23]

; 40   : 
; 41   :     err = deflateInit(&stream, level);

  00030	90000008	 adrp        x8,|??_C@_06CJNJFBNP@1?42?411@|
  00034	91000102	 add         x2,x8,PageOffset(|??_C@_06CJNJFBNP@1?42?411@|)
  00038	2a0303f3	 mov         w19,w3
  0003c	52800b03	 mov         w3,#0x58
  00040	2a0403e1	 mov         w1,w4
  00044	910043e0	 add         x0,sp,#0x10
  00048	94000000	 bl          deflateInit_

; 42   :     if (err != Z_OK) return err;

  0004c	35000000	 cbnz        w0,|$LN1@compress2|

; 43   : 
; 44   :     stream.next_out = dest;

  00050	f90013f5	 str         x21,[sp,#0x20]

; 45   :     stream.avail_out = 0;

  00054	52800008	 mov         w8,#0
  00058	b9002bff	 str         wzr,[sp,#0x28]

; 46   :     stream.next_in = (z_const Bytef *)source;
; 47   :     stream.avail_in = 0;

  0005c	52800009	 mov         w9,#0
  00060	f9000bf6	 str         x22,[sp,#0x10]
  00064	b9001bff	 str         wzr,[sp,#0x18]
  00068		 |$LL4@compress2|

; 48   : 
; 49   :     do {
; 50   :         if (stream.avail_out == 0) {

  00068	35000008	 cbnz        w8,|$LN6@compress2|

; 51   :             stream.avail_out = left > (uLong)max ? max : (uInt)left;

  0006c	3100069f	 cmn         w20,#1
  00070	12800008	 mov         w8,#-1
  00074	1a948108	 cselhi      w8,w8,w20
  00078	b9002be8	 str         w8,[sp,#0x28]
  0007c	4b080294	 sub         w20,w20,w8
  00080		 |$LN6@compress2|

; 52   :             left -= stream.avail_out;
; 53   :         }
; 54   :         if (stream.avail_in == 0) {

  00080	35000009	 cbnz        w9,|$LN7@compress2|

; 55   :             stream.avail_in = sourceLen > (uLong)max ? max : (uInt)sourceLen;

  00084	3100067f	 cmn         w19,#1
  00088	12800008	 mov         w8,#-1
  0008c	1a938108	 cselhi      w8,w8,w19
  00090	b9001be8	 str         w8,[sp,#0x18]
  00094	4b080273	 sub         w19,w19,w8
  00098		 |$LN7@compress2|

; 56   :             sourceLen -= stream.avail_in;
; 57   :         }
; 58   :         err = deflate(&stream, sourceLen ? Z_NO_FLUSH : Z_FINISH);

  00098	7100027f	 cmp         w19,#0
  0009c	52800088	 mov         w8,#4
  000a0	1a8813e1	 cselne      w1,wzr,w8
  000a4	910043e0	 add         x0,sp,#0x10
  000a8	94000000	 bl          deflate
  000ac	2a0003f5	 mov         w21,w0

; 59   :     } while (err == Z_OK);

  000b0	35000015	 cbnz        w21,|$LN15@compress2|
  000b4	b9402be8	 ldr         w8,[sp,#0x28]
  000b8	b9401be9	 ldr         w9,[sp,#0x18]
  000bc	17ffffeb	 b           |$LL4@compress2|
  000c0		 |$LN15@compress2|

; 60   : 
; 61   :     *destLen = stream.total_out;

  000c0	b9402fe8	 ldr         w8,[sp,#0x2C]

; 62   :     deflateEnd(&stream);

  000c4	910043e0	 add         x0,sp,#0x10
  000c8	b90002e8	 str         w8,[x23]
  000cc	94000000	 bl          deflateEnd

; 63   :     return err == Z_STREAM_END ? Z_OK : err;

  000d0	710006bf	 cmp         w21,#1
  000d4	1a9503e0	 cseleq      w0,wzr,w21
  000d8		 |$LN1@compress2|
  000d8	a8c77bfd	 ldp         fp,lr,[sp],#0x70
  000dc	f94013f7	 ldr         x23,[sp,#0x20]
  000e0	a9415bf5	 ldp         x21,x22,[sp,#0x10]
  000e4	a8c353f3	 ldp         x19,x20,[sp],#0x30
  000e8	d65f03c0	 ret

			 ENDP  ; |compress2|

; Function compile flags: /Ogtp
; File C:\Users\ws103\Desktop\zlib-1.2.11\compress.c

	AREA	|.text$mn|, CODE, ARM64

  00000		 |compress| PROC

; 74   :     return compress2(dest, destLen, source, sourceLen, Z_DEFAULT_COMPRESSION);

  00000	12800004	 mov         w4,#-1
  00004	14000000	 b           compress2

			 ENDP  ; |compress|

; Function compile flags: /Ogtp
; File C:\Users\ws103\Desktop\zlib-1.2.11\compress.c

	AREA	|.text$mn|, CODE, ARM64

  00000		 |compressBound| PROC

; 84   :     return sourceLen + (sourceLen >> 12) + (sourceLen >> 14) +

  00000	530e7c08	 lsr         w8,w0,#0xE
  00004	0b406509	 add         w9,w8,w0,lsr #0x19
  00008	0b403129	 add         w9,w9,w0,lsr #0xC
  0000c	0b000128	 add         w8,w9,w0
  00010	11003500	 add         w0,w8,#0xD
  00014	d65f03c0	 ret

			 ENDP  ; |compressBound|

	END
