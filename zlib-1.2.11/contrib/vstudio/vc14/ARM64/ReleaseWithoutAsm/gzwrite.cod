; Listing generated by Microsoft (R) Optimizing Compiler Version 19.28.29335.0 

	TTL	c:\users\ws103\desktop\zlib-1.2.11\gzwrite.c
	ARM64

	AREA	|.drectve|, DRECTVE

	EXPORT	|??_C@_0CH@DEEGAHIB@internal?5error?3?5deflate?5stream?5@| [ DATA ] ; `string'
	EXPORT	|??_C@_0CF@MLPJFDMM@requested?5length?5does?5not?5fit?5i@| [ DATA ] ; `string'
	IMPORT	|__imp__write|

	AREA	|.rdata|, DATA, READONLY
|??_C@_0CF@MLPJFDMM@requested?5length?5does?5not?5fit?5i@| DCB "requested"
	DCB	" length does not fit in int", 0x0	; `string'

	AREA	|.rdata|, DATA, READONLY
|??_C@_0CH@DEEGAHIB@internal?5error?3?5deflate?5stream?5@| DCB "internal "
	DCB	"error: deflate stream corrupt", 0x0	; `string'
	EXPORT	|gzsetparams|
	EXPORT	|gzflush|
	EXPORT	|gzprintf|
	EXPORT	|gzvprintf|
	EXPORT	|gzputs|
	EXPORT	|gzputc|
	EXPORT	|gzfwrite|
	EXPORT	|gzwrite|
	EXPORT	|gzclose_w|

	AREA	|.pdata|, PDATA
|$pdata$gzsetparams| DCD imagerel |$LN16|
	DCD	imagerel |$unwind$gzsetparams|

	AREA	|.pdata|, PDATA
|$pdata$gzflush| DCD imagerel |$LN12|
	DCD	imagerel |$unwind$gzflush|

	AREA	|.pdata|, PDATA
|$pdata$gzprintf| DCD imagerel |$LN4|
	DCD	imagerel |$unwind$gzprintf|

	AREA	|.pdata|, PDATA
|$pdata$gzvprintf| DCD imagerel |$LN21|
	DCD	imagerel |$unwind$gzvprintf|

	AREA	|.pdata|, PDATA
|$pdata$gzputs| DCD imagerel |$LN15|
	DCD	imagerel |$unwind$gzputs|

	AREA	|.pdata|, PDATA
|$pdata$gzputc| DCD imagerel |$LN14|
	DCD	imagerel |$unwind$gzputc|

	AREA	|.pdata|, PDATA
|$pdata$gzfwrite| DCD imagerel |$LN11|
	DCD	imagerel |$unwind$gzfwrite|

	AREA	|.pdata|, PDATA
|$pdata$gzwrite| DCD imagerel |$LN8|
	DCD	imagerel |$unwind$gzwrite|

	AREA	|.pdata|, PDATA
|$pdata$gz_write| DCD imagerel |gz_write|
	DCD	imagerel |$unwind$gz_write|

	AREA	|.pdata|, PDATA
|$pdata$gz_zero| DCD imagerel |gz_zero|
	DCD	imagerel |$unwind$gz_zero|

	AREA	|.pdata|, PDATA
|$pdata$gz_comp| DCD imagerel |gz_comp|
	DCD	imagerel |$unwind$gz_comp|

	AREA	|.pdata|, PDATA
|$pdata$gz_init| DCD imagerel |gz_init|
	DCD	imagerel |$unwind$gz_init|

	AREA	|.pdata|, PDATA
|$pdata$gzclose_w| DCD imagerel |$LN13|
	DCD	imagerel |$unwind$gzclose_w|

	AREA	|.xdata|, DATA
|$unwind$gzclose_w| DCD 0x8800041
	DCD	0x40003a
	DCD	0x40003e
	DCD	0xe42281e1
	;Code Words[1], Epilog Count[2], E[0], X[0], Function Length[65]=260 bytes
	;Epilog Start Index[1], Epilog Start Offset[58]=232 bytes
	;Epilog Start Index[1], Epilog Start Offset[62]=248 bytes
	;set_fp
	;save_fplr_x
	;save_r19r20_x
	;end

	AREA	|.xdata|, DATA
|$unwind$gz_init| DCD 0x1080003d
	DCD	0x40002d
	DCD	0x40003a
	DCD	0x1d481e1
	DCD	0xe3e3e3e4
	;Code Words[2], Epilog Count[2], E[0], X[0], Function Length[61]=244 bytes
	;Epilog Start Index[1], Epilog Start Offset[45]=180 bytes
	;Epilog Start Index[1], Epilog Start Offset[58]=232 bytes
	;set_fp
	;save_fplr_x
	;save_reg_x
	;end
	;nop
	;nop
	;nop

	AREA	|.xdata|, DATA
|$unwind$gz_comp| DCD 0x10c00074
	DCD	0x400022
	DCD	0x400066
	DCD	0x400070
	DCD	0x82c881e1
	DCD	0xe3e3e424
	;Code Words[2], Epilog Count[3], E[0], X[0], Function Length[116]=464 bytes
	;Epilog Start Index[1], Epilog Start Offset[34]=136 bytes
	;Epilog Start Index[1], Epilog Start Offset[102]=408 bytes
	;Epilog Start Index[1], Epilog Start Offset[112]=448 bytes
	;set_fp
	;save_fplr_x
	;save_regp
	;save_r19r20_x
	;end
	;nop
	;nop

	AREA	|.xdata|, DATA
|$unwind$gz_zero| DCD 0x1080002e
	DCD	0x400025
	DCD	0x40002a
	DCD	0x82c881e1
	DCD	0xe3e3e424
	;Code Words[2], Epilog Count[2], E[0], X[0], Function Length[46]=184 bytes
	;Epilog Start Index[1], Epilog Start Offset[37]=148 bytes
	;Epilog Start Index[1], Epilog Start Offset[42]=168 bytes
	;set_fp
	;save_fplr_x
	;save_regp
	;save_r19r20_x
	;end
	;nop
	;nop

	AREA	|.xdata|, DATA
|$unwind$gz_write| DCD 0x1080005e
	DCD	0x40003b
	DCD	0x400059
	DCD	0x4d181e1
	DCD	0xe42682c8
	;Code Words[2], Epilog Count[2], E[0], X[0], Function Length[94]=376 bytes
	;Epilog Start Index[1], Epilog Start Offset[59]=236 bytes
	;Epilog Start Index[1], Epilog Start Offset[89]=356 bytes
	;set_fp
	;save_fplr_x
	;save_reg
	;save_regp
	;save_r19r20_x
	;end

	AREA	|.xdata|, DATA
|$unwind$gzwrite| DCD 0x8800019
	DCD	0x40000f
	DCD	0x400017
	DCD	0xe3e481e1
	;Code Words[1], Epilog Count[2], E[0], X[0], Function Length[25]=100 bytes
	;Epilog Start Index[1], Epilog Start Offset[15]=60 bytes
	;Epilog Start Index[1], Epilog Start Offset[23]=92 bytes
	;set_fp
	;save_fplr_x
	;end
	;nop

	AREA	|.xdata|, DATA
|$unwind$gzfwrite| DCD 0x10800024
	DCD	0x400017
	DCD	0x400021
	DCD	0x1d481e1
	DCD	0xe3e3e3e4
	;Code Words[2], Epilog Count[2], E[0], X[0], Function Length[36]=144 bytes
	;Epilog Start Index[1], Epilog Start Offset[23]=92 bytes
	;Epilog Start Index[1], Epilog Start Offset[33]=132 bytes
	;set_fp
	;save_fplr_x
	;save_reg_x
	;end
	;nop
	;nop
	;nop

	AREA	|.xdata|, DATA
|$unwind$gzputc| DCD 0x8800038
	DCD	0x400029
	DCD	0x400035
	DCD	0xe42283e1
	;Code Words[1], Epilog Count[2], E[0], X[0], Function Length[56]=224 bytes
	;Epilog Start Index[1], Epilog Start Offset[41]=164 bytes
	;Epilog Start Index[1], Epilog Start Offset[53]=212 bytes
	;set_fp
	;save_fplr_x
	;save_r19r20_x
	;end

	AREA	|.xdata|, DATA
|$unwind$gzputs| DCD 0x1080001d
	DCD	0x400016
	DCD	0x40001a
	DCD	0x1d481e1
	DCD	0xe3e3e3e4
	;Code Words[2], Epilog Count[2], E[0], X[0], Function Length[29]=116 bytes
	;Epilog Start Index[1], Epilog Start Offset[22]=88 bytes
	;Epilog Start Index[1], Epilog Start Offset[26]=104 bytes
	;set_fp
	;save_fplr_x
	;save_reg_x
	;end
	;nop
	;nop
	;nop

	AREA	|.xdata|, DATA
|$unwind$gzvprintf| DCD 0x1100006b
	DCD	0x400014
	DCD	0x40005d
	DCD	0x400062
	DCD	0x400067
	DCD	0x82c881e1
	DCD	0xe3e3e424
	;Code Words[2], Epilog Count[4], E[0], X[0], Function Length[107]=428 bytes
	;Epilog Start Index[1], Epilog Start Offset[20]=80 bytes
	;Epilog Start Index[1], Epilog Start Offset[93]=372 bytes
	;Epilog Start Index[1], Epilog Start Offset[98]=392 bytes
	;Epilog Start Index[1], Epilog Start Offset[103]=412 bytes
	;set_fp
	;save_fplr_x
	;save_regp
	;save_r19r20_x
	;end
	;nop
	;nop

	AREA	|.xdata|, DATA
|$unwind$gzprintf| DCD 0x19a0000a
	DCD	0xe3e381e1
	DCD	0x381e403
	DCD	0xe3e3e3e4
	;Code Words[3], Epilog Start Index[6], E[1], X[0], Function Length[10]=40 bytes
	;set_fp
	;save_fplr_x
	;nop
	;nop
	;alloc_s
	;end
	;save_fplr_x
	;alloc_s
	;end
	;nop
	;nop
	;nop

	AREA	|.xdata|, DATA
|$unwind$gzflush| DCD 0x8800023
	DCD	0x40001c
	DCD	0x400020
	DCD	0xe42281e1
	;Code Words[1], Epilog Count[2], E[0], X[0], Function Length[35]=140 bytes
	;Epilog Start Index[1], Epilog Start Offset[28]=112 bytes
	;Epilog Start Index[1], Epilog Start Offset[32]=128 bytes
	;set_fp
	;save_fplr_x
	;save_r19r20_x
	;end

	AREA	|.xdata|, DATA
|$unwind$gzsetparams| DCD 0x10c00039
	DCD	0x40001d
	DCD	0x400030
	DCD	0x400035
	DCD	0x82d081e1
	DCD	0xe3e3e424
	;Code Words[2], Epilog Count[3], E[0], X[0], Function Length[57]=228 bytes
	;Epilog Start Index[1], Epilog Start Offset[29]=116 bytes
	;Epilog Start Index[1], Epilog Start Offset[48]=192 bytes
	;Epilog Start Index[1], Epilog Start Offset[53]=212 bytes
	;set_fp
	;save_fplr_x
	;save_reg
	;save_r19r20_x
	;end
	;nop
	;nop
; Function compile flags: /Ogtp
; File C:\Users\ws103\Desktop\zlib-1.2.11\gzwrite.c

	AREA	|.text$mn|, CODE, ARM64

  00000		 |gzclose_w| PROC

; 629  : {

  00000		 |$LN13|
  00000	a9bf53f3	 stp         x19,x20,[sp,#-0x10]!
  00004	a9bf7bfd	 stp         fp,lr,[sp,#-0x10]!
  00008	910003fd	 mov         fp,sp
  0000c	aa0003f4	 mov         x20,x0

; 630  :     int ret = Z_OK;

  00010	52800013	 mov         w19,#0

; 631  :     gz_statep state;
; 632  : 
; 633  :     /* get internal structure */
; 634  :     if (file == NULL)

  00014	b4000014	 cbz         x20,|$LN11@gzclose_w|

; 635  :         return Z_STREAM_ERROR;
; 636  :     state = (gz_statep)file;
; 637  : 
; 638  :     /* check that we're writing */
; 639  :     if (state->mode != GZ_WRITE)

  00018	b9401a88	 ldr         w8,[x20,#0x18]
  0001c	528f3629	 mov         w9,#0x79B1
  00020	6b09011f	 cmp         w8,w9
  00024	54000001	 bne         |$LN11@gzclose_w|

; 641  : 
; 642  :     /* check for seek request */
; 643  :     if (state->seek) {

  00028	b9406a88	 ldr         w8,[x20,#0x68]
  0002c	34000008	 cbz         w8,|$LN5@gzclose_w|

; 644  :         state->seek = 0;
; 645  :         if (gz_zero(state, state->skip) == -1)

  00030	f9403281	 ldr         x1,[x20,#0x60]
  00034	b9006a9f	 str         wzr,[x20,#0x68]
  00038	94000000	 bl          gz_zero
  0003c	3100041f	 cmn         w0,#1
  00040	54000001	 bne         |$LN5@gzclose_w|

; 646  :             ret = state->err;

  00044	b9406e93	 ldr         w19,[x20,#0x6C]
  00048		 |$LN5@gzclose_w|

; 647  :     }
; 648  : 
; 649  :     /* flush, free memory, and close file */
; 650  :     if (gz_comp(state, Z_FINISH) == -1)

  00048	52800081	 mov         w1,#4
  0004c	aa1403e0	 mov         x0,x20
  00050	94000000	 bl          gz_comp
  00054	3100041f	 cmn         w0,#1
  00058	54000001	 bne         |$LN6@gzclose_w|

; 651  :         ret = state->err;

  0005c	b9406e93	 ldr         w19,[x20,#0x6C]
  00060		 |$LN6@gzclose_w|

; 652  :     if (state->size) {

  00060	b9402a88	 ldr         w8,[x20,#0x28]
  00064	34000008	 cbz         w8,|$LN7@gzclose_w|

; 653  :         if (!state->direct) {

  00068	b9404288	 ldr         w8,[x20,#0x40]
  0006c	35000008	 cbnz        w8,|$LN8@gzclose_w|

; 654  :             (void)deflateEnd(&(state->strm));

  00070	9101e280	 add         x0,x20,#0x78
  00074	94000000	 bl          deflateEnd

; 655  :             free(state->out);

  00078	90000008	 adrp        x8,__imp_free
  0007c	f9400108	 ldr         x8,[x8,PageOffset(__imp_free)]
  00080	f9401e80	 ldr         x0,[x20,#0x38]
  00084	d63f0100	 blr         x8
  00088		 |$LN8@gzclose_w|

; 656  :         }
; 657  :         free(state->in);

  00088	90000008	 adrp        x8,__imp_free
  0008c	f9400108	 ldr         x8,[x8,PageOffset(__imp_free)]
  00090	f9401a80	 ldr         x0,[x20,#0x30]
  00094	d63f0100	 blr         x8
  00098		 |$LN7@gzclose_w|

; 658  :     }
; 659  :     gz_error(state, Z_OK, NULL);

  00098	d2800002	 mov         x2,#0
  0009c	52800001	 mov         w1,#0
  000a0	aa1403e0	 mov         x0,x20
  000a4	94000000	 bl          gz_error

; 660  :     free(state->path);

  000a8	90000008	 adrp        x8,__imp_free
  000ac	f9400108	 ldr         x8,[x8,PageOffset(__imp_free)]
  000b0	f9401280	 ldr         x0,[x20,#0x20]
  000b4	d63f0100	 blr         x8

; 661  :     if (close(state->fd) == -1)

  000b8	90000008	 adrp        x8,__imp__close
  000bc	f9400108	 ldr         x8,[x8,PageOffset(__imp__close)]
  000c0	b9401e80	 ldr         w0,[x20,#0x1C]
  000c4	d63f0100	 blr         x8
  000c8	12800008	 mov         w8,#-1
  000cc	3100041f	 cmn         w0,#1
  000d0	1a930113	 cseleq      w19,w8,w19

; 662  :         ret = Z_ERRNO;
; 663  :     free(state);

  000d4	90000008	 adrp        x8,__imp_free
  000d8	f9400108	 ldr         x8,[x8,PageOffset(__imp_free)]
  000dc	aa1403e0	 mov         x0,x20
  000e0	d63f0100	 blr         x8

; 664  :     return ret;

  000e4	2a1303e0	 mov         w0,w19
  000e8	a8c17bfd	 ldp         fp,lr,[sp],#0x10
  000ec	a8c153f3	 ldp         x19,x20,[sp],#0x10
  000f0	d65f03c0	 ret
  000f4		 |$LN11@gzclose_w|

; 640  :         return Z_STREAM_ERROR;

  000f4	12800020	 mov         w0,#-2
  000f8	a8c17bfd	 ldp         fp,lr,[sp],#0x10
  000fc	a8c153f3	 ldp         x19,x20,[sp],#0x10
  00100	d65f03c0	 ret

			 ENDP  ; |gzclose_w|

; Function compile flags: /Ogtp
; File C:\Users\ws103\Desktop\zlib-1.2.11\gzwrite.c

	AREA	|.text$mn|, CODE, ARM64

  00000		 |gz_init| PROC

; 19   : {

  00000	f81f0ff3	 str         x19,[sp,#-0x10]!
  00004	a9bf7bfd	 stp         fp,lr,[sp,#-0x10]!
  00008	910003fd	 mov         fp,sp
  0000c	aa0003f3	 mov         x19,x0

; 20   :     int ret;
; 21   :     z_streamp strm = &(state->strm);
; 22   : 
; 23   :     /* allocate input buffer (double size for gzprintf) */
; 24   :     state->in = (unsigned char *)malloc(state->want << 1);

  00010	b9402e68	 ldr         w8,[x19,#0x2C]
  00014	531f7900	 lsl         w0,w8,#1
  00018	9000000a	 adrp        x10,__imp_malloc
  0001c	f9400148	 ldr         x8,[x10,PageOffset(__imp_malloc)]
  00020	d63f0100	 blr         x8
  00024	f9001a60	 str         x0,[x19,#0x30]

; 25   :     if (state->in == NULL) {

  00028	b4000000	 cbz         x0,|$LN8@gz_init|

; 26   :         gz_error(state, Z_MEM_ERROR, "out of memory");
; 27   :         return -1;
; 28   :     }
; 29   : 
; 30   :     /* only need output buffer and deflate state if compressing */
; 31   :     if (!state->direct) {

  0002c	b9404268	 ldr         w8,[x19,#0x40]
  00030	35000008	 cbnz        w8,|$LN3@gz_init|

; 32   :         /* allocate output buffer */
; 33   :         state->out = (unsigned char *)malloc(state->want);

  00034	90000008	 adrp        x8,__imp_malloc
  00038	f9400108	 ldr         x8,[x8,PageOffset(__imp_malloc)]
  0003c	b9402e60	 ldr         w0,[x19,#0x2C]
  00040	d63f0100	 blr         x8
  00044	f9001e60	 str         x0,[x19,#0x38]

; 34   :         if (state->out == NULL) {

  00048	b4000000	 cbz         x0,|$LN9@gz_init|

; 35   :             free(state->in);
; 36   :             gz_error(state, Z_MEM_ERROR, "out of memory");
; 37   :             return -1;
; 38   :         }
; 39   : 
; 40   :         /* allocate deflate memory, set up for gzip compression */
; 41   :         strm->zalloc = Z_NULL;

  0004c	a90afe7f	 stp         xzr,xzr,[x19,#0xA8]

; 42   :         strm->zfree = Z_NULL;
; 43   :         strm->opaque = Z_NULL;
; 44   :         ret = deflateInit2(strm, state->level, Z_DEFLATED,

  00050	90000008	 adrp        x8,|??_C@_06CJNJFBNP@1?42?411@|
  00054	91000106	 add         x6,x8,PageOffset(|??_C@_06CJNJFBNP@1?42?411@|)
  00058	f9005e7f	 str         xzr,[x19,#0xB8]
  0005c	294b1661	 ldp         w1,w5,[x19,#0x58]
  00060	52800b07	 mov         w7,#0x58
  00064	52800104	 mov         w4,#8
  00068	528003e3	 mov         w3,#0x1F
  0006c	52800102	 mov         w2,#8
  00070	9101e260	 add         x0,x19,#0x78
  00074	94000000	 bl          deflateInit2_

; 45   :                            MAX_WBITS + 16, DEF_MEM_LEVEL, state->strategy);
; 46   :         if (ret != Z_OK) {

  00078	34000000	 cbz         w0,|$LN5@gz_init|

; 47   :             free(state->out);

  0007c	90000008	 adrp        x8,__imp_free
  00080	f9400108	 ldr         x8,[x8,PageOffset(__imp_free)]
  00084	f9401e60	 ldr         x0,[x19,#0x38]
  00088	d63f0100	 blr         x8
  0008c		 |$LN9@gz_init|

; 65   : }

  0008c	90000008	 adrp        x8,__imp_free
  00090	f9400108	 ldr         x8,[x8,PageOffset(__imp_free)]
  00094	f9401a60	 ldr         x0,[x19,#0x30]
  00098	d63f0100	 blr         x8
  0009c		 |$LN8@gz_init|
  0009c	90000008	 adrp        x8,|??_C@_0O@BNNCBLEN@out?5of?5memory@|
  000a0	91000102	 add         x2,x8,PageOffset(|??_C@_0O@BNNCBLEN@out?5of?5memory@|)
  000a4	12800061	 mov         w1,#-4
  000a8	aa1303e0	 mov         x0,x19
  000ac	94000000	 bl          gz_error
  000b0	12800000	 mov         w0,#-1
  000b4	a8c17bfd	 ldp         fp,lr,[sp],#0x10
  000b8	f84107f3	 ldr         x19,[sp],#0x10
  000bc	d65f03c0	 ret
  000c0		 |$LN5@gz_init|

; 48   :             free(state->in);
; 49   :             gz_error(state, Z_MEM_ERROR, "out of memory");
; 50   :             return -1;
; 51   :         }
; 52   :         strm->next_in = NULL;

  000c0	f9003e7f	 str         xzr,[x19,#0x78]
  000c4	b9404268	 ldr         w8,[x19,#0x40]
  000c8		 |$LN3@gz_init|

; 53   :     }
; 54   : 
; 55   :     /* mark state as initialized */
; 56   :     state->size = state->want;

  000c8	b9402e69	 ldr         w9,[x19,#0x2C]
  000cc	b9002a69	 str         w9,[x19,#0x28]

; 57   : 
; 58   :     /* initialize write buffer if compressing */
; 59   :     if (!state->direct) {

  000d0	35000008	 cbnz        w8,|$LN6@gz_init|

; 60   :         strm->avail_out = state->size;

  000d4	b9009269	 str         w9,[x19,#0x90]

; 61   :         strm->next_out = state->out;

  000d8	f9401e68	 ldr         x8,[x19,#0x38]
  000dc	f9004668	 str         x8,[x19,#0x88]

; 62   :         state->x.next = strm->next_out;

  000e0	f9000668	 str         x8,[x19,#8]
  000e4		 |$LN6@gz_init|

; 63   :     }
; 64   :     return 0;

  000e4	52800000	 mov         w0,#0
  000e8	a8c17bfd	 ldp         fp,lr,[sp],#0x10
  000ec	f84107f3	 ldr         x19,[sp],#0x10
  000f0	d65f03c0	 ret

			 ENDP  ; |gz_init|

; Function compile flags: /Ogtp
; File C:\Users\ws103\Desktop\zlib-1.2.11\gzwrite.c

	AREA	|.text$mn|, CODE, ARM64

  00000		 |gz_comp| PROC

; 76   : {

  00000	a9be53f3	 stp         x19,x20,[sp,#-0x20]!
  00004	a9015bf5	 stp         x21,x22,[sp,#0x10]
  00008	a9bf7bfd	 stp         fp,lr,[sp,#-0x10]!
  0000c	910003fd	 mov         fp,sp
  00010	aa0003f3	 mov         x19,x0

; 77   :     int ret, writ;
; 78   :     unsigned have, put, max = ((unsigned)-1 >> 2) + 1;
; 79   :     z_streamp strm = &(state->strm);
; 80   : 
; 81   :     /* allocate memory if this is the first time through */
; 82   :     if (state->size == 0 && gz_init(state) == -1)

  00014	b9402a68	 ldr         w8,[x19,#0x28]
  00018	2a0103f5	 mov         w21,w1
  0001c	35000008	 cbnz        w8,|$LN42@gz_comp|
  00020	94000000	 bl          gz_init
  00024	3100041f	 cmn         w0,#1
  00028	54000000	 beq         |$LN43@gz_comp|
  0002c		 |$LN42@gz_comp|

; 83   :         return -1;
; 84   : 
; 85   :     /* write directly if requested */
; 86   :     if (state->direct) {

  0002c	b9404268	 ldr         w8,[x19,#0x40]
  00030	34000008	 cbz         w8,|$LN10@gz_comp|

; 87   :         while (strm->avail_in) {

  00034	b9408269	 ldr         w9,[x19,#0x80]
  00038	34000009	 cbz         w9,|$LN18@gz_comp|
  0003c	f9403e68	 ldr         x8,[x19,#0x78]
  00040	52a80014	 mov         w20,#0x40000000
  00044	52a80015	 mov         w21,#0x40000000
  00048	90000016	 adrp        x22,__imp__write
  0004c		 |$LL2@gz_comp|

; 88   :             put = strm->avail_in > max ? max : strm->avail_in;
; 89   :             writ = write(state->fd, strm->next_in, put);

  0004c	aa0803e1	 mov         x1,x8
  00050	b9401e60	 ldr         w0,[x19,#0x1C]
  00054	f94002c8	 ldr         x8,[x22,PageOffset(__imp__write)]
  00058	6b14013f	 cmp         w9,w20
  0005c	1a8982a2	 cselhi      w2,w21,w9
  00060	d63f0100	 blr         x8

; 90   :             if (writ < 0) {

  00064	37f80000	 tbnz        x0,#0x1F,|$LN27@gz_comp|

; 91   :                 gz_error(state, Z_ERRNO, zstrerror());
; 92   :                 return -1;
; 93   :             }
; 94   :             strm->avail_in -= (unsigned)writ;

  00068	b9408268	 ldr         w8,[x19,#0x80]
  0006c	4b000109	 sub         w9,w8,w0

; 95   :             strm->next_in += writ;

  00070	f9403e68	 ldr         x8,[x19,#0x78]
  00074	b9008269	 str         w9,[x19,#0x80]
  00078	8b20c108	 add         x8,x8,w0,sxtw #0
  0007c	f9003e68	 str         x8,[x19,#0x78]
  00080	35000009	 cbnz        w9,|$LL2@gz_comp|

; 138  : 
; 139  :     /* all done, no errors */
; 140  :     return 0;

  00084	52800000	 mov         w0,#0
  00088	a8c17bfd	 ldp         fp,lr,[sp],#0x10
  0008c	a9415bf5	 ldp         x21,x22,[sp,#0x10]
  00090	a8c253f3	 ldp         x19,x20,[sp],#0x20
  00094	d65f03c0	 ret
  00098		 |$LN27@gz_comp|

; 141  : }

  00098	90000008	 adrp        x8,__imp__errno
  0009c	f9400108	 ldr         x8,[x8,PageOffset(__imp__errno)]
  000a0	d63f0100	 blr         x8
  000a4	90000008	 adrp        x8,__imp_strerror
  000a8	f9400108	 ldr         x8,[x8,PageOffset(__imp_strerror)]
  000ac	b9400000	 ldr         w0,[x0]
  000b0	d63f0100	 blr         x8
  000b4	12800001	 mov         w1,#-1
  000b8	aa0003e2	 mov         x2,x0
  000bc	1400003e	 b           |$LN44@gz_comp|
  000c0		 |$LN10@gz_comp|

; 96   :         }
; 97   :         return 0;
; 98   :     }
; 99   : 
; 100  :     /* run deflate() on provided input until it produces no more output */
; 101  :     ret = Z_OK;

  000c0	b9409269	 ldr         w9,[x19,#0x90]
  000c4	52800000	 mov         w0,#0
  000c8		 |$LL6@gz_comp|

; 102  :     do {
; 103  :         /* write out current buffer contents if full, or if flushing, but if
; 104  :            doing Z_FINISH then don't write until we get to Z_STREAM_END */
; 105  :         if (strm->avail_out == 0 || (flush != Z_NO_FLUSH &&

  000c8	34000009	 cbz         w9,|$LN26@gz_comp|
  000cc	2a0903f4	 mov         w20,w9
  000d0	34000015	 cbz         w21,|$LN16@gz_comp|
  000d4	710012bf	 cmp         w21,#4
  000d8	54000001	 bne         |$LN26@gz_comp|
  000dc	2a0903f4	 mov         w20,w9
  000e0	7100041f	 cmp         w0,#1
  000e4	54000001	 bne         |$LN16@gz_comp|
  000e8		 |$LN26@gz_comp|

; 106  :             (flush != Z_FINISH || ret == Z_STREAM_END))) {
; 107  :             while (strm->next_out > state->x.next) {

  000e8	f9404668	 ldr         x8,[x19,#0x88]
  000ec	f940066b	 ldr         x11,[x19,#8]
  000f0	eb0b011f	 cmp         x8,x11
  000f4	54000009	 bls         |$LN41@gz_comp|
  000f8	d2a80014	 mov         x20,#0x40000000
  000fc	90000016	 adrp        x22,__imp__write
  00100		 |$LL7@gz_comp|

; 108  :                 put = strm->next_out - state->x.next > (int)max ? max :

  00100	cb0b010a	 sub         x10,x8,x11

; 109  :                       (unsigned)(strm->next_out - state->x.next);
; 110  :                 writ = write(state->fd, state->x.next, put);

  00104	b9401e60	 ldr         w0,[x19,#0x1C]
  00108	4b0b0102	 sub         w2,w8,w11
  0010c	f94002c8	 ldr         x8,[x22,PageOffset(__imp__write)]
  00110	eb14015f	 cmp         x10,x20
  00114	52a8000c	 mov         w12,#0x40000000
  00118	1a8cd042	 cselle      w2,w2,w12
  0011c	aa0b03e1	 mov         x1,x11
  00120	d63f0100	 blr         x8

; 111  :                 if (writ < 0) {

  00124	37f80000	 tbnz        x0,#0x1F,|$LN27@gz_comp|

; 112  :                     gz_error(state, Z_ERRNO, zstrerror());
; 113  :                     return -1;
; 114  :                 }
; 115  :                 state->x.next += writ;

  00128	f9400668	 ldr         x8,[x19,#8]
  0012c	8b20c10b	 add         x11,x8,w0,sxtw #0
  00130	f900066b	 str         x11,[x19,#8]
  00134	f9404668	 ldr         x8,[x19,#0x88]
  00138	eb0b011f	 cmp         x8,x11
  0013c	54000008	 bhi         |$LL7@gz_comp|
  00140		 |$LN41@gz_comp|

; 116  :             }
; 117  :             if (strm->avail_out == 0) {

  00140	b9409274	 ldr         w20,[x19,#0x90]
  00144	35000014	 cbnz        w20,|$LN16@gz_comp|

; 118  :                 strm->avail_out = state->size;

  00148	b9402a68	 ldr         w8,[x19,#0x28]
  0014c	b9009268	 str         w8,[x19,#0x90]

; 119  :                 strm->next_out = state->out;

  00150	f9401e69	 ldr         x9,[x19,#0x38]
  00154	f9004669	 str         x9,[x19,#0x88]

; 120  :                 state->x.next = state->out;

  00158	f9401e68	 ldr         x8,[x19,#0x38]
  0015c	f9000668	 str         x8,[x19,#8]
  00160	b9409274	 ldr         w20,[x19,#0x90]
  00164		 |$LN16@gz_comp|

; 121  :             }
; 122  :         }
; 123  : 
; 124  :         /* compress */
; 125  :         have = strm->avail_out;
; 126  :         ret = deflate(strm, flush);

  00164	2a1503e1	 mov         w1,w21
  00168	9101e260	 add         x0,x19,#0x78
  0016c	94000000	 bl          deflate

; 127  :         if (ret == Z_STREAM_ERROR) {

  00170	3100081f	 cmn         w0,#2
  00174	54000000	 beq         |$LN30@gz_comp|

; 129  :                       "internal error: deflate stream corrupt");
; 130  :             return -1;
; 131  :         }
; 132  :         have -= strm->avail_out;

  00178	b9409269	 ldr         w9,[x19,#0x90]
  0017c	4b090288	 sub         w8,w20,w9

; 133  :     } while (have);

  00180	35000008	 cbnz        w8,|$LL6@gz_comp|

; 134  : 
; 135  :     /* if that completed a deflate stream, allow another to start */
; 136  :     if (flush == Z_FINISH)

  00184	710012bf	 cmp         w21,#4
  00188	54000001	 bne         |$LN18@gz_comp|

; 137  :         deflateReset(strm);

  0018c	9101e260	 add         x0,x19,#0x78
  00190	94000000	 bl          deflateReset
  00194		 |$LN18@gz_comp|

; 138  : 
; 139  :     /* all done, no errors */
; 140  :     return 0;

  00194	52800000	 mov         w0,#0
  00198	a8c17bfd	 ldp         fp,lr,[sp],#0x10
  0019c	a9415bf5	 ldp         x21,x22,[sp,#0x10]
  001a0	a8c253f3	 ldp         x19,x20,[sp],#0x20
  001a4	d65f03c0	 ret
  001a8		 |$LN30@gz_comp|

; 128  :             gz_error(state, Z_STREAM_ERROR,

  001a8	90000008	 adrp        x8,|??_C@_0CH@DEEGAHIB@internal?5error?3?5deflate?5stream?5@|
  001ac	91000102	 add         x2,x8,PageOffset(|??_C@_0CH@DEEGAHIB@internal?5error?3?5deflate?5stream?5@|)
  001b0	12800021	 mov         w1,#-2
  001b4		 |$LN44@gz_comp|

; 141  : }

  001b4	aa1303e0	 mov         x0,x19
  001b8	94000000	 bl          gz_error
  001bc		 |$LN43@gz_comp|
  001bc	12800000	 mov         w0,#-1
  001c0	a8c17bfd	 ldp         fp,lr,[sp],#0x10
  001c4	a9415bf5	 ldp         x21,x22,[sp,#0x10]
  001c8	a8c253f3	 ldp         x19,x20,[sp],#0x20
  001cc	d65f03c0	 ret

			 ENDP  ; |gz_comp|

; Function compile flags: /Ogtp
; File C:\Users\ws103\Desktop\zlib-1.2.11\gzwrite.c

	AREA	|.text$mn|, CODE, ARM64

  00000		 |gz_zero| PROC

; 148  : {

  00000	a9be53f3	 stp         x19,x20,[sp,#-0x20]!
  00004	a9015bf5	 stp         x21,x22,[sp,#0x10]
  00008	a9bf7bfd	 stp         fp,lr,[sp,#-0x10]!
  0000c	910003fd	 mov         fp,sp
  00010	aa0003f4	 mov         x20,x0

; 149  :     int first;
; 150  :     unsigned n;
; 151  :     z_streamp strm = &(state->strm);
; 152  : 
; 153  :     /* consume whatever's left in the input buffer */
; 154  :     if (strm->avail_in && gz_comp(state, Z_NO_FLUSH) == -1)

  00014	b9408288	 ldr         w8,[x20,#0x80]
  00018	aa0103f3	 mov         x19,x1
  0001c	34000008	 cbz         w8,|$LN4@gz_zero|
  00020	52800001	 mov         w1,#0
  00024	94000000	 bl          gz_comp
  00028	3100041f	 cmn         w0,#1
  0002c	54000000	 beq         |$LN11@gz_zero|
  00030		 |$LN4@gz_zero|

; 155  :         return -1;
; 156  : 
; 157  :     /* compress len zeros (len guaranteed > 0) */
; 158  :     first = 1;

  00030	52800036	 mov         w22,#1

; 159  :     while (len) {

  00034	b4000013	 cbz         x19,|$LN3@gz_zero|
  00038		 |$LL2@gz_zero|

; 160  :         n = GT_OFF(state->size) || (z_off64_t)state->size > len ?

  00038	b9402a89	 ldr         w9,[x20,#0x28]

; 161  :             (unsigned)len : state->size;
; 162  :         if (first) {

  0003c	eb29427f	 cmp         x19,w9,uxtw #0
  00040	1a89b275	 csellt      w21,w19,w9
  00044	34000016	 cbz         w22,|$LN5@gz_zero|

; 163  :             memset(state->in, 0, n);

  00048	f9401a80	 ldr         x0,[x20,#0x30]
  0004c	aa1503e2	 mov         x2,x21
  00050	52800001	 mov         w1,#0
  00054	94000000	 bl          memset

; 164  :             first = 0;

  00058	52800016	 mov         w22,#0
  0005c		 |$LN5@gz_zero|

; 165  :         }
; 166  :         strm->avail_in = n;

  0005c	b9008295	 str         w21,[x20,#0x80]

; 167  :         strm->next_in = state->in;

  00060	f9401a88	 ldr         x8,[x20,#0x30]

; 168  :         state->x.pos += n;
; 169  :         if (gz_comp(state, Z_NO_FLUSH) == -1)

  00064	52800001	 mov         w1,#0
  00068	aa1403e0	 mov         x0,x20
  0006c	f9003e88	 str         x8,[x20,#0x78]
  00070	f9400a89	 ldr         x9,[x20,#0x10]
  00074	8b35412a	 add         x10,x9,w21,uxtw #0
  00078	f9000a8a	 str         x10,[x20,#0x10]
  0007c	94000000	 bl          gz_comp
  00080	3100041f	 cmn         w0,#1
  00084	54000000	 beq         |$LN11@gz_zero|

; 171  :         len -= n;

  00088	cb354273	 sub         x19,x19,w21,uxtw #0
  0008c	b5000013	 cbnz        x19,|$LL2@gz_zero|
  00090		 |$LN3@gz_zero|

; 172  :     }
; 173  :     return 0;

  00090	52800000	 mov         w0,#0
  00094	a8c17bfd	 ldp         fp,lr,[sp],#0x10
  00098	a9415bf5	 ldp         x21,x22,[sp,#0x10]
  0009c	a8c253f3	 ldp         x19,x20,[sp],#0x20
  000a0	d65f03c0	 ret
  000a4		 |$LN11@gz_zero|

; 170  :             return -1;

  000a4	12800000	 mov         w0,#-1
  000a8	a8c17bfd	 ldp         fp,lr,[sp],#0x10
  000ac	a9415bf5	 ldp         x21,x22,[sp,#0x10]
  000b0	a8c253f3	 ldp         x19,x20,[sp],#0x20
  000b4	d65f03c0	 ret

			 ENDP  ; |gz_zero|

; Function compile flags: /Ogtp
; File C:\Users\ws103\Desktop\zlib-1.2.11\gzwrite.c

	AREA	|.text$mn|, CODE, ARM64

  00000		 |gz_write| PROC

; 182  : {

  00000	a9bd53f3	 stp         x19,x20,[sp,#-0x30]!
  00004	a9015bf5	 stp         x21,x22,[sp,#0x10]
  00008	f90013f7	 str         x23,[sp,#0x20]
  0000c	a9bf7bfd	 stp         fp,lr,[sp,#-0x10]!
  00010	910003fd	 mov         fp,sp
  00014	aa0203f5	 mov         x21,x2

; 183  :     z_size_t put = len;

  00018	aa1503f7	 mov         x23,x21
  0001c	aa0003f4	 mov         x20,x0
  00020	aa0103f6	 mov         x22,x1

; 184  : 
; 185  :     /* if len is zero, avoid unnecessary operations */
; 186  :     if (len == 0)

  00024	b4000015	 cbz         x21,|$LN25@gz_write|

; 187  :         return 0;
; 188  : 
; 189  :     /* allocate memory if this is the first time through */
; 190  :     if (state->size == 0 && gz_init(state) == -1)

  00028	b9402a88	 ldr         w8,[x20,#0x28]
  0002c	35000008	 cbnz        w8,|$LN32@gz_write|
  00030	94000000	 bl          gz_init
  00034	3100041f	 cmn         w0,#1
  00038	54000000	 beq         |$LN25@gz_write|
  0003c		 |$LN32@gz_write|

; 191  :         return 0;
; 192  : 
; 193  :     /* check for seek request */
; 194  :     if (state->seek) {

  0003c	b9406a88	 ldr         w8,[x20,#0x68]
  00040	34000008	 cbz         w8,|$LN11@gz_write|

; 195  :         state->seek = 0;
; 196  :         if (gz_zero(state, state->skip) == -1)

  00044	f9403281	 ldr         x1,[x20,#0x60]
  00048	aa1403e0	 mov         x0,x20
  0004c	b9006a9f	 str         wzr,[x20,#0x68]
  00050	94000000	 bl          gz_zero
  00054	3100041f	 cmn         w0,#1
  00058	54000000	 beq         |$LN25@gz_write|
  0005c		 |$LN11@gz_write|

; 197  :             return 0;
; 198  :     }
; 199  : 
; 200  :     /* for small len, copy to input buffer, otherwise compress directly */
; 201  :     if (len < state->size) {

  0005c	b9402a88	 ldr         w8,[x20,#0x28]
  00060	eb2842bf	 cmp         x21,w8,uxtw #0
  00064	54000002	 bhs         |$LN12@gz_write|
  00068		 |$LL4@gz_write|

; 202  :         /* copy to input buffer, compress when full */
; 203  :         do {
; 204  :             unsigned have, copy;
; 205  : 
; 206  :             if (state->strm.avail_in == 0)

  00068	b940828a	 ldr         w10,[x20,#0x80]
  0006c	3500000a	 cbnz        w10,|$LN29@gz_write|

; 207  :                 state->strm.next_in = state->in;

  00070	f9401a88	 ldr         x8,[x20,#0x30]
  00074	f9003e88	 str         x8,[x20,#0x78]
  00078	aa0803ec	 mov         x12,x8
  0007c	14000003	 b           |$LN14@gz_write|
  00080		 |$LN29@gz_write|
  00080	f9403e88	 ldr         x8,[x20,#0x78]
  00084	f9401a8c	 ldr         x12,[x20,#0x30]
  00088		 |$LN14@gz_write|

; 208  :             have = (unsigned)((state->strm.next_in + state->strm.avail_in) -

  00088	4b0c0109	 sub         w9,w8,w12

; 209  :                               state->in);
; 210  :             copy = state->size - have;

  0008c	b9402a88	 ldr         w8,[x20,#0x28]
  00090	0b0a012b	 add         w11,w9,w10

; 211  :             if (copy > len)
; 212  :                 copy = len;
; 213  :             memcpy(state->in + have, buf, copy);

  00094	8b2b4180	 add         x0,x12,w11,uxtw #0
  00098	aa1603e1	 mov         x1,x22
  0009c	4b0b010a	 sub         w10,w8,w11
  000a0	eb2a42bf	 cmp         x21,w10,uxtw #0
  000a4	1a952153	 cselhs      w19,w10,w21
  000a8	aa1303e2	 mov         x2,x19
  000ac	94000000	 bl          memcpy

; 214  :             state->strm.avail_in += copy;

  000b0	b9408288	 ldr         w8,[x20,#0x80]

; 215  :             state->x.pos += copy;
; 216  :             buf = (const char *)buf + copy;

  000b4	8b3342d6	 add         x22,x22,w19,uxtw #0
  000b8	f9400a8a	 ldr         x10,[x20,#0x10]

; 217  :             len -= copy;

  000bc	cb3342b5	 sub         x21,x21,w19,uxtw #0
  000c0	0b080269	 add         w9,w19,w8
  000c4	8b334148	 add         x8,x10,w19,uxtw #0
  000c8	b9008289	 str         w9,[x20,#0x80]
  000cc	f9000a88	 str         x8,[x20,#0x10]

; 218  :             if (len && gz_comp(state, Z_NO_FLUSH) == -1)

  000d0	b4000015	 cbz         x21,|$LN6@gz_write|
  000d4	52800001	 mov         w1,#0
  000d8	aa1403e0	 mov         x0,x20
  000dc	94000000	 bl          gz_comp
  000e0	3100041f	 cmn         w0,#1
  000e4	54000001	 bne         |$LL4@gz_write|
  000e8		 |$LN25@gz_write|

; 236  :                 return 0;

  000e8	d2800000	 mov         x0,#0
  000ec	a8c17bfd	 ldp         fp,lr,[sp],#0x10
  000f0	f94013f7	 ldr         x23,[sp,#0x20]
  000f4	a9415bf5	 ldp         x21,x22,[sp,#0x10]
  000f8	a8c353f3	 ldp         x19,x20,[sp],#0x30
  000fc	d65f03c0	 ret
  00100		 |$LN12@gz_write|

; 219  :                 return 0;
; 220  :         } while (len);
; 221  :     }
; 222  :     else {
; 223  :         /* consume whatever's left in the input buffer */
; 224  :         if (state->strm.avail_in && gz_comp(state, Z_NO_FLUSH) == -1)

  00100	b9408288	 ldr         w8,[x20,#0x80]
  00104	34000008	 cbz         w8,|$LN17@gz_write|
  00108	52800001	 mov         w1,#0
  0010c	aa1403e0	 mov         x0,x20
  00110	94000000	 bl          gz_comp
  00114	3100041f	 cmn         w0,#1
  00118	54000000	 beq         |$LN25@gz_write|
  0011c		 |$LN17@gz_write|

; 225  :             return 0;
; 226  : 
; 227  :         /* directly compress user buffer to file */
; 228  :         state->strm.next_in = (z_const Bytef *)buf;

  0011c	f9003e96	 str         x22,[x20,#0x78]
  00120	b2407ff6	 mov         x22,#0xFFFFFFFF
  00124		 |$LL7@gz_write|

; 229  :         do {
; 230  :             unsigned n = (unsigned)-1;

  00124	12800013	 mov         w19,#-1

; 231  :             if (n > len)

  00128	eb1502df	 cmp         x22,x21
  0012c	54000009	 bls         |$LN18@gz_write|

; 232  :                 n = len;

  00130	2a1503f3	 mov         w19,w21
  00134		 |$LN18@gz_write|

; 233  :             state->strm.avail_in = n;
; 234  :             state->x.pos += n;

  00134	f9400a88	 ldr         x8,[x20,#0x10]

; 235  :             if (gz_comp(state, Z_NO_FLUSH) == -1)

  00138	52800001	 mov         w1,#0
  0013c	b9008293	 str         w19,[x20,#0x80]
  00140	aa1403e0	 mov         x0,x20
  00144	8b334109	 add         x9,x8,w19,uxtw #0
  00148	f9000a89	 str         x9,[x20,#0x10]
  0014c	94000000	 bl          gz_comp
  00150	3100041f	 cmn         w0,#1
  00154	54000000	 beq         |$LN25@gz_write|

; 237  :             len -= n;

  00158	cb3342b5	 sub         x21,x21,w19,uxtw #0

; 238  :         } while (len);

  0015c	b5000015	 cbnz        x21,|$LL7@gz_write|
  00160		 |$LN6@gz_write|

; 239  :     }
; 240  : 
; 241  :     /* input was all buffered or compressed */
; 242  :     return put;

  00160	aa1703e0	 mov         x0,x23
  00164	a8c17bfd	 ldp         fp,lr,[sp],#0x10
  00168	f94013f7	 ldr         x23,[sp,#0x20]
  0016c	a9415bf5	 ldp         x21,x22,[sp,#0x10]
  00170	a8c353f3	 ldp         x19,x20,[sp],#0x30
  00174	d65f03c0	 ret

			 ENDP  ; |gz_write|

; Function compile flags: /Ogtp
; File C:\Users\ws103\Desktop\zlib-1.2.11\gzwrite.c

	AREA	|.text$mn|, CODE, ARM64

  00000		 |gzwrite| PROC

; 250  : {

  00000		 |$LN8|
  00000	a9bf7bfd	 stp         fp,lr,[sp,#-0x10]!
  00004	910003fd	 mov         fp,sp

; 251  :     gz_statep state;
; 252  : 
; 253  :     /* get internal structure */
; 254  :     if (file == NULL)

  00008	b4000000	 cbz         x0,|$LN4@gzwrite|

; 255  :         return 0;
; 256  :     state = (gz_statep)file;
; 257  : 
; 258  :     /* check that we're writing and that there's no error */
; 259  :     if (state->mode != GZ_WRITE || state->err != Z_OK)

  0000c	b9401808	 ldr         w8,[x0,#0x18]
  00010	528f3629	 mov         w9,#0x79B1
  00014	6b09011f	 cmp         w8,w9
  00018	54000001	 bne         |$LN4@gzwrite|
  0001c	b9406c08	 ldr         w8,[x0,#0x6C]
  00020	35000008	 cbnz        w8,|$LN4@gzwrite|

; 260  :         return 0;
; 261  : 
; 262  :     /* since an int is returned, make sure len fits in one, otherwise return
; 263  :        with an error (this avoids a flaw in the interface) */
; 264  :     if ((int)len < 0) {

  00024	36f80002	 tbz         x2,#0x1F,|$LN5@gzwrite|

; 265  :         gz_error(state, Z_DATA_ERROR, "requested length does not fit in int");

  00028	90000008	 adrp        x8,|??_C@_0CF@MLPJFDMM@requested?5length?5does?5not?5fit?5i@|
  0002c	91000102	 add         x2,x8,PageOffset(|??_C@_0CF@MLPJFDMM@requested?5length?5does?5not?5fit?5i@|)
  00030	12800041	 mov         w1,#-3
  00034	94000000	 bl          gz_error
  00038		 |$LN4@gzwrite|

; 271  : }

  00038	52800000	 mov         w0,#0
  0003c	a8c17bfd	 ldp         fp,lr,[sp],#0x10
  00040	d65f03c0	 ret
  00044		 |$LN5@gzwrite|

; 266  :         return 0;
; 267  :     }
; 268  : 
; 269  :     /* write len bytes from buf (the return value will fit in an int) */
; 270  :     return (int)gz_write(state, buf, len);

  00044	7100005f	 cmp         w2,#0
  00048	1a9fa042	 cselge      w2,w2,wzr
  0004c	d503229f	 csdb
  00050	d3407c42	 uxtw        x2,w2
  00054	94000000	 bl          gz_write
  00058	2a0003e0	 mov         w0,w0
  0005c	a8c17bfd	 ldp         fp,lr,[sp],#0x10
  00060	d65f03c0	 ret

			 ENDP  ; |gzwrite|

; Function compile flags: /Ogtp
; File C:\Users\ws103\Desktop\zlib-1.2.11\gzwrite.c

	AREA	|.text$mn|, CODE, ARM64

  00000		 |gzfwrite| PROC

; 279  : {

  00000		 |$LN11|
  00000	f81f0ff3	 str         x19,[sp,#-0x10]!
  00004	a9bf7bfd	 stp         fp,lr,[sp,#-0x10]!
  00008	910003fd	 mov         fp,sp
  0000c	aa0103f3	 mov         x19,x1
  00010	aa0203e9	 mov         x9,x2

; 280  :     z_size_t len;
; 281  :     gz_statep state;
; 282  : 
; 283  :     /* get internal structure */
; 284  :     if (file == NULL)

  00014	b4000003	 cbz         x3,|$LN4@gzfwrite|

; 285  :         return 0;
; 286  :     state = (gz_statep)file;
; 287  : 
; 288  :     /* check that we're writing and that there's no error */
; 289  :     if (state->mode != GZ_WRITE || state->err != Z_OK)

  00018	b9401868	 ldr         w8,[x3,#0x18]
  0001c	528f362a	 mov         w10,#0x79B1
  00020	6b0a011f	 cmp         w8,w10
  00024	54000001	 bne         |$LN4@gzfwrite|
  00028	b9406c68	 ldr         w8,[x3,#0x6C]
  0002c	35000008	 cbnz        w8,|$LN4@gzfwrite|

; 290  :         return 0;
; 291  : 
; 292  :     /* compute bytes to read -- error on overflow */
; 293  :     len = nitems * size;

  00030	9b097e62	 mul         x2,x19,x9

; 294  :     if (size && len / size != nitems) {

  00034	b4000013	 cbz         x19,|$LN5@gzfwrite|
  00038	9ad30848	 udiv        x8,x2,x19
  0003c	eb09011f	 cmp         x8,x9
  00040	54000000	 beq         |$LN5@gzfwrite|

; 295  :         gz_error(state, Z_STREAM_ERROR, "request does not fit in a size_t");

  00044	90000008	 adrp        x8,|??_C@_0CB@EGGJDMIK@request?5does?5not?5fit?5in?5a?5size_@|
  00048	91000102	 add         x2,x8,PageOffset(|??_C@_0CB@EGGJDMIK@request?5does?5not?5fit?5in?5a?5size_@|)
  0004c	12800021	 mov         w1,#-2
  00050	aa0303e0	 mov         x0,x3
  00054	94000000	 bl          gz_error
  00058		 |$LN4@gzfwrite|

; 301  : }

  00058	d2800000	 mov         x0,#0
  0005c	a8c17bfd	 ldp         fp,lr,[sp],#0x10
  00060	f84107f3	 ldr         x19,[sp],#0x10
  00064	d65f03c0	 ret
  00068		 |$LN5@gzfwrite|

; 296  :         return 0;
; 297  :     }
; 298  : 
; 299  :     /* write len bytes to buf, return the number of full items written */
; 300  :     return len ? gz_write(state, buf, len) / size : 0;

  00068	b4000002	 cbz         x2,|$LN4@gzfwrite|
  0006c	aa0003e1	 mov         x1,x0
  00070	aa0303e0	 mov         x0,x3
  00074	94000000	 bl          gz_write
  00078	b5000013	 cbnz        x19,|$LN10@gzfwrite|
  0007c	d43e0080	 brk         #0xF004
  00080		 |$LN10@gzfwrite|
  00080	9ad30800	 udiv        x0,x0,x19
  00084	a8c17bfd	 ldp         fp,lr,[sp],#0x10
  00088	f84107f3	 ldr         x19,[sp],#0x10
  0008c	d65f03c0	 ret

			 ENDP  ; |gzfwrite|

; Function compile flags: /Ogtp
; File C:\Users\ws103\Desktop\zlib-1.2.11\gzwrite.c

	AREA	|.text$mn|, CODE, ARM64

  00000		 |gzputc| PROC

; 307  : {

  00000		 |$LN14|
  00000	a9bf53f3	 stp         x19,x20,[sp,#-0x10]!
  00004	a9be7bfd	 stp         fp,lr,[sp,#-0x20]!
  00008	910003fd	 mov         fp,sp
  0000c	aa0003f3	 mov         x19,x0
  00010	2a0103f4	 mov         w20,w1

; 308  :     unsigned have;
; 309  :     unsigned char buf[1];
; 310  :     gz_statep state;
; 311  :     z_streamp strm;
; 312  : 
; 313  :     /* get internal structure */
; 314  :     if (file == NULL)

  00014	b4000013	 cbz         x19,|$LN4@gzputc|

; 315  :         return -1;
; 316  :     state = (gz_statep)file;
; 317  :     strm = &(state->strm);
; 318  : 
; 319  :     /* check that we're writing and that there's no error */
; 320  :     if (state->mode != GZ_WRITE || state->err != Z_OK)

  00018	b9401a68	 ldr         w8,[x19,#0x18]
  0001c	528f3629	 mov         w9,#0x79B1
  00020	6b09011f	 cmp         w8,w9
  00024	54000001	 bne         |$LN4@gzputc|
  00028	b9406e68	 ldr         w8,[x19,#0x6C]
  0002c	35000008	 cbnz        w8,|$LN4@gzputc|

; 322  : 
; 323  :     /* check for seek request */
; 324  :     if (state->seek) {

  00030	b9406a68	 ldr         w8,[x19,#0x68]
  00034	34000008	 cbz         w8,|$LN6@gzputc|

; 325  :         state->seek = 0;
; 326  :         if (gz_zero(state, state->skip) == -1)

  00038	f9403261	 ldr         x1,[x19,#0x60]
  0003c	b9006a7f	 str         wzr,[x19,#0x68]
  00040	94000000	 bl          gz_zero
  00044	3100041f	 cmn         w0,#1
  00048	54000000	 beq         |$LN4@gzputc|
  0004c		 |$LN6@gzputc|

; 327  :             return -1;
; 328  :     }
; 329  : 
; 330  :     /* try writing to input buffer for speed (state->size == 0 if buffer not
; 331  :        initialized) */
; 332  :     if (state->size) {

  0004c	b9402a6b	 ldr         w11,[x19,#0x28]
  00050	3400000b	 cbz         w11,|$LN9@gzputc|

; 333  :         if (strm->avail_in == 0)

  00054	b940826a	 ldr         w10,[x19,#0x80]
  00058	3500000a	 cbnz        w10,|$LN12@gzputc|

; 334  :             strm->next_in = state->in;

  0005c	f9401a68	 ldr         x8,[x19,#0x30]
  00060	f9003e68	 str         x8,[x19,#0x78]
  00064	aa0803ec	 mov         x12,x8
  00068	14000003	 b           |$LN8@gzputc|
  0006c		 |$LN12@gzputc|
  0006c	f9403e68	 ldr         x8,[x19,#0x78]
  00070	f9401a6c	 ldr         x12,[x19,#0x30]
  00074		 |$LN8@gzputc|

; 335  :         have = (unsigned)((strm->next_in + strm->avail_in) - state->in);

  00074	4b0c0109	 sub         w9,w8,w12
  00078	0b0a012d	 add         w13,w9,w10

; 336  :         if (have < state->size) {

  0007c	6b0b01bf	 cmp         w13,w11
  00080	54000002	 bhs         |$LN9@gzputc|

; 337  :             state->in[have] = (unsigned char)c;

  00084	382d4994	 strb        w20,[x12,w13 uxtw #0]

; 338  :             strm->avail_in++;

  00088	b9408268	 ldr         w8,[x19,#0x80]

; 339  :             state->x.pos++;
; 340  :             return c & 0xff;

  0008c	12001e80	 and         w0,w20,#0xFF
  00090	11000509	 add         w9,w8,#1
  00094	b9008269	 str         w9,[x19,#0x80]
  00098	f9400a6a	 ldr         x10,[x19,#0x10]
  0009c	91000548	 add         x8,x10,#1
  000a0	f9000a68	 str         x8,[x19,#0x10]
  000a4	a8c27bfd	 ldp         fp,lr,[sp],#0x20
  000a8	a8c153f3	 ldp         x19,x20,[sp],#0x10
  000ac	d65f03c0	 ret
  000b0		 |$LN9@gzputc|

; 341  :         }
; 342  :     }
; 343  : 
; 344  :     /* no room in buffer or not initialized, use gz_write() */
; 345  :     buf[0] = (unsigned char)c;
; 346  :     if (gz_write(state, buf, 1) != 1)

  000b0	d2800022	 mov         x2,#1
  000b4	390043f4	 strb        w20,[sp,#0x10]
  000b8	910043e1	 add         x1,sp,#0x10
  000bc	aa1303e0	 mov         x0,x19
  000c0	94000000	 bl          gz_write
  000c4	f100041f	 cmp         x0,#1

; 347  :         return -1;
; 348  :     return c & 0xff;

  000c8	12001e80	 and         w0,w20,#0xFF
  000cc	54000000	 beq         |$LN1@gzputc|
  000d0		 |$LN4@gzputc|

; 321  :         return -1;

  000d0	12800000	 mov         w0,#-1
  000d4		 |$LN1@gzputc|
  000d4	a8c27bfd	 ldp         fp,lr,[sp],#0x20
  000d8	a8c153f3	 ldp         x19,x20,[sp],#0x10
  000dc	d65f03c0	 ret

			 ENDP  ; |gzputc|

; Function compile flags: /Ogtp
; File C:\Users\ws103\Desktop\zlib-1.2.11\gzwrite.c

	AREA	|.text$mn|, CODE, ARM64

  00000		 |gzputs| PROC

; 355  : {

  00000		 |$LN15|
  00000	f81f0ff3	 str         x19,[sp,#-0x10]!
  00004	a9bf7bfd	 stp         fp,lr,[sp,#-0x10]!
  00008	910003fd	 mov         fp,sp

; 356  :     int ret;
; 357  :     z_size_t len;
; 358  :     gz_statep state;
; 359  : 
; 360  :     /* get internal structure */
; 361  :     if (file == NULL)

  0000c	b4000000	 cbz         x0,|$LN4@gzputs|

; 362  :         return -1;
; 363  :     state = (gz_statep)file;
; 364  : 
; 365  :     /* check that we're writing and that there's no error */
; 366  :     if (state->mode != GZ_WRITE || state->err != Z_OK)

  00010	b9401808	 ldr         w8,[x0,#0x18]
  00014	528f3629	 mov         w9,#0x79B1
  00018	6b09011f	 cmp         w8,w9
  0001c	54000001	 bne         |$LN4@gzputs|
  00020	b9406c08	 ldr         w8,[x0,#0x6C]
  00024	35000008	 cbnz        w8,|$LN4@gzputs|

; 368  : 
; 369  :     /* write string */
; 370  :     len = strlen(str);

  00028	39c00028	 ldrsb       w8,[x1]
  0002c	aa0103e9	 mov         x9,x1
  00030	34000008	 cbz         w8,|$LN6@gzputs|
  00034		 |$LL7@gzputs|
  00034	38c01d28	 ldrsb       w8,[x9,#1]!
  00038	35000008	 cbnz        w8,|$LL7@gzputs|
  0003c		 |$LN6@gzputs|
  0003c	cb010133	 sub         x19,x9,x1

; 371  :     ret = gz_write(state, str, len);

  00040	aa1303e2	 mov         x2,x19
  00044	94000000	 bl          gz_write

; 372  :     return ret == 0 && len != 0 ? -1 : ret;

  00048	12800009	 mov         w9,#-1
  0004c	7100001f	 cmp         w0,#0
  00050	fa400a64	 ccmpeq      x19,#0,#4
  00054	1a801120	 cselne      w0,w9,w0
  00058	a8c17bfd	 ldp         fp,lr,[sp],#0x10
  0005c	f84107f3	 ldr         x19,[sp],#0x10
  00060	d65f03c0	 ret
  00064		 |$LN4@gzputs|

; 367  :         return -1;

  00064	12800000	 mov         w0,#-1
  00068	a8c17bfd	 ldp         fp,lr,[sp],#0x10
  0006c	f84107f3	 ldr         x19,[sp],#0x10
  00070	d65f03c0	 ret

			 ENDP  ; |gzputs|

; Function compile flags: /Ogtp
; File C:\Users\ws103\Desktop\zlib-1.2.11\gzwrite.c
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.19041.0\ucrt\stdio.h
; File C:\Users\ws103\Desktop\zlib-1.2.11\gzwrite.c
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.19041.0\ucrt\stdio.h
; File C:\Users\ws103\Desktop\zlib-1.2.11\gzwrite.c

	AREA	|.text$mn|, CODE, ARM64

  00000		 |gzvprintf| PROC

; 380  : {

  00000		 |$LN21|
  00000	a9be53f3	 stp         x19,x20,[sp,#-0x20]!
  00004	a9015bf5	 stp         x21,x22,[sp,#0x10]
  00008	a9bf7bfd	 stp         fp,lr,[sp,#-0x10]!
  0000c	910003fd	 mov         fp,sp
  00010	aa0003f3	 mov         x19,x0
  00014	aa0103f4	 mov         x20,x1
  00018	aa0203f6	 mov         x22,x2

; 381  :     int len;
; 382  :     unsigned left;
; 383  :     char *next;
; 384  :     gz_statep state;
; 385  :     z_streamp strm;
; 386  : 
; 387  :     /* get internal structure */
; 388  :     if (file == NULL)

  0001c	b4000013	 cbz         x19,|$LN4@gzvprintf|

; 389  :         return Z_STREAM_ERROR;
; 390  :     state = (gz_statep)file;
; 391  :     strm = &(state->strm);
; 392  : 
; 393  :     /* check that we're writing and that there's no error */
; 394  :     if (state->mode != GZ_WRITE || state->err != Z_OK)

  00020	b9401a68	 ldr         w8,[x19,#0x18]
  00024	528f3629	 mov         w9,#0x79B1
  00028	6b09011f	 cmp         w8,w9
  0002c	54000001	 bne         |$LN4@gzvprintf|
  00030	b9406e68	 ldr         w8,[x19,#0x6C]
  00034	35000008	 cbnz        w8,|$LN4@gzvprintf|

; 396  : 
; 397  :     /* make sure we have some buffer space */
; 398  :     if (state->size == 0 && gz_init(state) == -1)

  00038	b9402a68	 ldr         w8,[x19,#0x28]
  0003c	35000008	 cbnz        w8,|$LN18@gzvprintf|
  00040	94000000	 bl          gz_init
  00044	3100041f	 cmn         w0,#1
  00048	54000001	 bne         |$LN18@gzvprintf|
  0004c		 |$LN19@gzvprintf|

; 449  : }

  0004c	b9406e60	 ldr         w0,[x19,#0x6C]
  00050	a8c17bfd	 ldp         fp,lr,[sp],#0x10
  00054	a9415bf5	 ldp         x21,x22,[sp,#0x10]
  00058	a8c253f3	 ldp         x19,x20,[sp],#0x20
  0005c	d65f03c0	 ret
  00060		 |$LN18@gzvprintf|

; 399  :         return state->err;
; 400  : 
; 401  :     /* check for seek request */
; 402  :     if (state->seek) {

  00060	b9406a68	 ldr         w8,[x19,#0x68]
  00064	34000008	 cbz         w8,|$LN7@gzvprintf|

; 403  :         state->seek = 0;
; 404  :         if (gz_zero(state, state->skip) == -1)

  00068	f9403261	 ldr         x1,[x19,#0x60]
  0006c	aa1303e0	 mov         x0,x19
  00070	b9006a7f	 str         wzr,[x19,#0x68]
  00074	94000000	 bl          gz_zero
  00078	3100041f	 cmn         w0,#1
  0007c	54000000	 beq         |$LN19@gzvprintf|
  00080		 |$LN7@gzvprintf|

; 405  :             return state->err;
; 406  :     }
; 407  : 
; 408  :     /* do the printf() into the input buffer, put length in len -- the input
; 409  :        buffer is double-sized just for this function, so there is guaranteed to
; 410  :        be state->size bytes available after the current contents */
; 411  :     if (strm->avail_in == 0)

  00080	b9408269	 ldr         w9,[x19,#0x80]
  00084	35000009	 cbnz        w9,|$LN17@gzvprintf|

; 412  :         strm->next_in = state->in;

  00088	f9401a68	 ldr         x8,[x19,#0x30]
  0008c	f9003e68	 str         x8,[x19,#0x78]
  00090	14000002	 b           |$LN8@gzvprintf|
  00094		 |$LN17@gzvprintf|
  00094	f9403e68	 ldr         x8,[x19,#0x78]
  00098		 |$LN8@gzvprintf|

; 413  :     next = (char *)(state->in + (strm->next_in - state->in) + strm->avail_in);

  00098	8b294115	 add         x21,x8,w9,uxtw #0

; 414  :     next[state->size - 1] = 0;

  0009c	b9402a68	 ldr         w8,[x19,#0x28]
  000a0	51000509	 sub         w9,w8,#1
  000a4	38294abf	 strb        wzr,[x21,w9 uxtw #0]
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.19041.0\ucrt\stdio.h

; 1439 :         int const _Result = __stdio_common_vsprintf(

  000a8	94000000	 bl          __local_stdio_printf_options
; File C:\Users\ws103\Desktop\zlib-1.2.11\gzwrite.c

; 428  :     len = vsnprintf(next, state->size, format, va);

  000ac	b9402a62	 ldr         w2,[x19,#0x28]
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.19041.0\ucrt\stdio.h

; 1439 :         int const _Result = __stdio_common_vsprintf(

  000b0	f9400008	 ldr         x8,[x0]
  000b4	aa1603e5	 mov         x5,x22
  000b8	d2800004	 mov         x4,#0
  000bc	aa1403e3	 mov         x3,x20
  000c0	aa1503e1	 mov         x1,x21
  000c4	b27f0100	 orr         x0,x8,#2
  000c8	90000008	 adrp        x8,__imp___stdio_common_vsprintf
  000cc	f9400108	 ldr         x8,[x8,PageOffset(__imp___stdio_common_vsprintf)]
  000d0	d63f0100	 blr         x8

; 1440 :             _CRT_INTERNAL_LOCAL_PRINTF_OPTIONS | _CRT_INTERNAL_PRINTF_STANDARD_SNPRINTF_BEHAVIOR,
; 1441 :             _Buffer, _BufferCount, _Format, NULL, _ArgList);
; 1442 : 
; 1443 :         return _Result < 0 ? -1 : _Result;

  000d4	12800008	 mov         w8,#-1
  000d8	7100001f	 cmp         w0,#0
  000dc	1a80b114	 csellt      w20,w8,w0
; File C:\Users\ws103\Desktop\zlib-1.2.11\gzwrite.c

; 433  :     if (len == 0 || (unsigned)len >= state->size || next[state->size - 1] != 0)

  000e0	34000014	 cbz         w20,|$LN10@gzvprintf|
  000e4	b9402a68	 ldr         w8,[x19,#0x28]
  000e8	6b08029f	 cmp         w20,w8
  000ec	54000002	 bhs         |$LN10@gzvprintf|
  000f0	6b08029f	 cmp         w20,w8
  000f4	1a9f3294	 csello      w20,w20,wzr
  000f8	d503229f	 csdb
  000fc	b9402a68	 ldr         w8,[x19,#0x28]
  00100	51000509	 sub         w9,w8,#1
  00104	38e94aaa	 ldrsb       w10,[x21,w9 uxtw #0]
  00108	3500000a	 cbnz        w10,|$LN10@gzvprintf|

; 435  : 
; 436  :     /* update buffer and position, compress first half if past that */
; 437  :     strm->avail_in += (unsigned)len;

  0010c	b9408268	 ldr         w8,[x19,#0x80]
  00110	0b140109	 add         w9,w8,w20
  00114	b9008269	 str         w9,[x19,#0x80]

; 438  :     state->x.pos += len;

  00118	f9400a6a	 ldr         x10,[x19,#0x10]
  0011c	8b34c148	 add         x8,x10,w20,sxtw #0
  00120	f9000a68	 str         x8,[x19,#0x10]

; 439  :     if (strm->avail_in >= state->size) {

  00124	b9408269	 ldr         w9,[x19,#0x80]
  00128	b9402a68	 ldr         w8,[x19,#0x28]
  0012c	6b08013f	 cmp         w9,w8
  00130	54000003	 blo         |$LN11@gzvprintf|

; 440  :         left = strm->avail_in - state->size;
; 441  :         strm->avail_in = state->size;
; 442  :         if (gz_comp(state, Z_NO_FLUSH) == -1)

  00134	52800001	 mov         w1,#0
  00138	b9008268	 str         w8,[x19,#0x80]
  0013c	aa1303e0	 mov         x0,x19
  00140	4b080135	 sub         w21,w9,w8
  00144	94000000	 bl          gz_comp
  00148	3100041f	 cmn         w0,#1
  0014c	54000000	 beq         |$LN19@gzvprintf|

; 443  :             return state->err;
; 444  :         memcpy(state->in, state->in + state->size, left);

  00150	f9401a60	 ldr         x0,[x19,#0x30]
  00154	aa1503e2	 mov         x2,x21
  00158	b9402a68	 ldr         w8,[x19,#0x28]
  0015c	8b284001	 add         x1,x0,w8,uxtw #0
  00160	94000000	 bl          memcpy

; 445  :         strm->next_in = state->in;

  00164	f9401a68	 ldr         x8,[x19,#0x30]

; 446  :         strm->avail_in = left;

  00168	b9008275	 str         w21,[x19,#0x80]
  0016c	f9003e68	 str         x8,[x19,#0x78]
  00170		 |$LN11@gzvprintf|

; 447  :     }
; 448  :     return len;

  00170	2a1403e0	 mov         w0,w20
  00174	a8c17bfd	 ldp         fp,lr,[sp],#0x10
  00178	a9415bf5	 ldp         x21,x22,[sp,#0x10]
  0017c	a8c253f3	 ldp         x19,x20,[sp],#0x20
  00180	d65f03c0	 ret
  00184		 |$LN10@gzvprintf|

; 434  :         return 0;

  00184	52800000	 mov         w0,#0
  00188	a8c17bfd	 ldp         fp,lr,[sp],#0x10
  0018c	a9415bf5	 ldp         x21,x22,[sp,#0x10]
  00190	a8c253f3	 ldp         x19,x20,[sp],#0x20
  00194	d65f03c0	 ret
  00198		 |$LN4@gzvprintf|

; 395  :         return Z_STREAM_ERROR;

  00198	12800020	 mov         w0,#-2
  0019c	a8c17bfd	 ldp         fp,lr,[sp],#0x10
  001a0	a9415bf5	 ldp         x21,x22,[sp,#0x10]
  001a4	a8c253f3	 ldp         x19,x20,[sp],#0x20
  001a8	d65f03c0	 ret

			 ENDP  ; |gzvprintf|

; Function compile flags: /Ogtp
; File C:\Users\ws103\Desktop\zlib-1.2.11\gzwrite.c

	AREA	|.text$mn|, CODE, ARM64

  00000		 |gzprintf| PROC

; 452  : {

  00000		 |$LN4|
  00000	a9bd0fe2	 stp         x2,x3,[sp,#-0x30]!
  00004	a90117e4	 stp         x4,x5,[sp,#0x10]
  00008	a9021fe6	 stp         x6,x7,[sp,#0x20]
  0000c	a9bf7bfd	 stp         fp,lr,[sp,#-0x10]!
  00010	910003fd	 mov         fp,sp

; 453  :     va_list va;
; 454  :     int ret;
; 455  : 
; 456  :     va_start(va, format);

  00014	910043e2	 add         x2,sp,#0x10

; 457  :     ret = gzvprintf(file, format, va);

  00018	94000000	 bl          gzvprintf
  0001c	a8c17bfd	 ldp         fp,lr,[sp],#0x10
  00020	9100c3ff	 add         sp,sp,#0x30
  00024	d65f03c0	 ret

			 ENDP  ; |gzprintf|

; Function compile flags: /Ogtp
; File C:\Users\ws103\Desktop\zlib-1.2.11\gzwrite.c

	AREA	|.text$mn|, CODE, ARM64

  00000		 |gzflush| PROC

; 556  : {

  00000		 |$LN12|
  00000	a9bf53f3	 stp         x19,x20,[sp,#-0x10]!
  00004	a9bf7bfd	 stp         fp,lr,[sp,#-0x10]!
  00008	910003fd	 mov         fp,sp
  0000c	aa0003f3	 mov         x19,x0
  00010	2a0103f4	 mov         w20,w1

; 557  :     gz_statep state;
; 558  : 
; 559  :     /* get internal structure */
; 560  :     if (file == NULL)

  00014	b4000013	 cbz         x19,|$LN4@gzflush|

; 561  :         return Z_STREAM_ERROR;
; 562  :     state = (gz_statep)file;
; 563  : 
; 564  :     /* check that we're writing and that there's no error */
; 565  :     if (state->mode != GZ_WRITE || state->err != Z_OK)

  00018	b9401a68	 ldr         w8,[x19,#0x18]
  0001c	528f3629	 mov         w9,#0x79B1
  00020	6b09011f	 cmp         w8,w9
  00024	54000001	 bne         |$LN4@gzflush|
  00028	b9406e68	 ldr         w8,[x19,#0x6C]
  0002c	7100011f	 cmp         w8,#0

; 567  : 
; 568  :     /* check flush parameter */
; 569  :     if (flush < 0 || flush > Z_FINISH)

  00030	7a440a8a	 ccmpeq      w20,#4,#0xA
  00034	54000008	 bhi         |$LN4@gzflush|

; 570  :         return Z_STREAM_ERROR;
; 571  : 
; 572  :     /* check for seek request */
; 573  :     if (state->seek) {

  00038	7100129f	 cmp         w20,#4
  0003c	1a9fd294	 cselle      w20,w20,wzr
  00040	d503229f	 csdb
  00044	b9406a68	 ldr         w8,[x19,#0x68]
  00048	34000008	 cbz         w8,|$LN8@gzflush|

; 574  :         state->seek = 0;
; 575  :         if (gz_zero(state, state->skip) == -1)

  0004c	f9403261	 ldr         x1,[x19,#0x60]
  00050	b9006a7f	 str         wzr,[x19,#0x68]
  00054	94000000	 bl          gz_zero
  00058	3100041f	 cmn         w0,#1
  0005c	54000000	 beq         |$LN10@gzflush|
  00060		 |$LN8@gzflush|

; 576  :             return state->err;
; 577  :     }
; 578  : 
; 579  :     /* compress remaining data with requested flush */
; 580  :     (void)gz_comp(state, flush);

  00060	2a1403e1	 mov         w1,w20
  00064	aa1303e0	 mov         x0,x19
  00068	94000000	 bl          gz_comp
  0006c		 |$LN10@gzflush|

; 581  :     return state->err;
; 582  : }

  0006c	b9406e60	 ldr         w0,[x19,#0x6C]
  00070	a8c17bfd	 ldp         fp,lr,[sp],#0x10
  00074	a8c153f3	 ldp         x19,x20,[sp],#0x10
  00078	d65f03c0	 ret
  0007c		 |$LN4@gzflush|

; 566  :         return Z_STREAM_ERROR;

  0007c	12800020	 mov         w0,#-2
  00080	a8c17bfd	 ldp         fp,lr,[sp],#0x10
  00084	a8c153f3	 ldp         x19,x20,[sp],#0x10
  00088	d65f03c0	 ret

			 ENDP  ; |gzflush|

; Function compile flags: /Ogtp
; File C:\Users\ws103\Desktop\zlib-1.2.11\gzwrite.c

	AREA	|.text$mn|, CODE, ARM64

  00000		 |gzsetparams| PROC

; 589  : {

  00000		 |$LN16|
  00000	a9be53f3	 stp         x19,x20,[sp,#-0x20]!
  00004	f9000bf5	 str         x21,[sp,#0x10]
  00008	a9bf7bfd	 stp         fp,lr,[sp,#-0x10]!
  0000c	910003fd	 mov         fp,sp
  00010	aa0003f3	 mov         x19,x0
  00014	2a0103f4	 mov         w20,w1
  00018	2a0203f5	 mov         w21,w2

; 590  :     gz_statep state;
; 591  :     z_streamp strm;
; 592  : 
; 593  :     /* get internal structure */
; 594  :     if (file == NULL)

  0001c	b4000013	 cbz         x19,|$LN4@gzsetparam|

; 595  :         return Z_STREAM_ERROR;
; 596  :     state = (gz_statep)file;
; 597  :     strm = &(state->strm);
; 598  : 
; 599  :     /* check that we're writing and that there's no error */
; 600  :     if (state->mode != GZ_WRITE || state->err != Z_OK)

  00020	b9401a68	 ldr         w8,[x19,#0x18]
  00024	528f3629	 mov         w9,#0x79B1
  00028	6b09011f	 cmp         w8,w9
  0002c	54000001	 bne         |$LN4@gzsetparam|
  00030	b9406e68	 ldr         w8,[x19,#0x6C]
  00034	35000008	 cbnz        w8,|$LN4@gzsetparam|

; 602  : 
; 603  :     /* if no change is requested, then do nothing */
; 604  :     if (level == state->level && strategy == state->strategy)

  00038	b9405a68	 ldr         w8,[x19,#0x58]
  0003c	6b08029f	 cmp         w20,w8
  00040	54000001	 bne         |$LN5@gzsetparam|
  00044	b9405e68	 ldr         w8,[x19,#0x5C]
  00048	6b0802bf	 cmp         w21,w8
  0004c	54000000	 beq         |$LN13@gzsetparam|
  00050		 |$LN5@gzsetparam|

; 605  :         return Z_OK;
; 606  : 
; 607  :     /* check for seek request */
; 608  :     if (state->seek) {

  00050	b9406a68	 ldr         w8,[x19,#0x68]
  00054	34000008	 cbz         w8,|$LN12@gzsetparam|

; 609  :         state->seek = 0;
; 610  :         if (gz_zero(state, state->skip) == -1)

  00058	f9403261	 ldr         x1,[x19,#0x60]
  0005c	aa1303e0	 mov         x0,x19
  00060	b9006a7f	 str         wzr,[x19,#0x68]
  00064	94000000	 bl          gz_zero
  00068	3100041f	 cmn         w0,#1
  0006c	54000001	 bne         |$LN12@gzsetparam|
  00070		 |$LN14@gzsetparam|

; 622  :     state->strategy = strategy;
; 623  :     return Z_OK;
; 624  : }

  00070	b9406e60	 ldr         w0,[x19,#0x6C]
  00074	a8c17bfd	 ldp         fp,lr,[sp],#0x10
  00078	f9400bf5	 ldr         x21,[sp,#0x10]
  0007c	a8c253f3	 ldp         x19,x20,[sp],#0x20
  00080	d65f03c0	 ret
  00084		 |$LN12@gzsetparam|

; 611  :             return state->err;
; 612  :     }
; 613  : 
; 614  :     /* change compression parameters for subsequent input */
; 615  :     if (state->size) {

  00084	b9402a68	 ldr         w8,[x19,#0x28]
  00088	34000008	 cbz         w8,|$LN8@gzsetparam|

; 616  :         /* flush previous input with previous parameters before changing */
; 617  :         if (strm->avail_in && gz_comp(state, Z_BLOCK) == -1)

  0008c	b9408268	 ldr         w8,[x19,#0x80]
  00090	34000008	 cbz         w8,|$LN9@gzsetparam|
  00094	528000a1	 mov         w1,#5
  00098	aa1303e0	 mov         x0,x19
  0009c	94000000	 bl          gz_comp
  000a0	3100041f	 cmn         w0,#1
  000a4	54000000	 beq         |$LN14@gzsetparam|
  000a8		 |$LN9@gzsetparam|

; 618  :             return state->err;
; 619  :         deflateParams(strm, level, strategy);

  000a8	2a1503e2	 mov         w2,w21
  000ac	2a1403e1	 mov         w1,w20
  000b0	9101e260	 add         x0,x19,#0x78
  000b4	94000000	 bl          deflateParams
  000b8		 |$LN8@gzsetparam|

; 620  :     }
; 621  :     state->level = level;

  000b8	290b5674	 stp         w20,w21,[x19,#0x58]
  000bc		 |$LN13@gzsetparam|

; 622  :     state->strategy = strategy;
; 623  :     return Z_OK;
; 624  : }

  000bc	52800000	 mov         w0,#0
  000c0	a8c17bfd	 ldp         fp,lr,[sp],#0x10
  000c4	f9400bf5	 ldr         x21,[sp,#0x10]
  000c8	a8c253f3	 ldp         x19,x20,[sp],#0x20
  000cc	d65f03c0	 ret
  000d0		 |$LN4@gzsetparam|

; 601  :         return Z_STREAM_ERROR;

  000d0	12800020	 mov         w0,#-2
  000d4	a8c17bfd	 ldp         fp,lr,[sp],#0x10
  000d8	f9400bf5	 ldr         x21,[sp,#0x10]
  000dc	a8c253f3	 ldp         x19,x20,[sp],#0x20
  000e0	d65f03c0	 ret

			 ENDP  ; |gzsetparams|

	END
