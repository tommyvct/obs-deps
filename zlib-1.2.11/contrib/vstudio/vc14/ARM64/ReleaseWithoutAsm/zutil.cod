; Listing generated by Microsoft (R) Optimizing Compiler Version 19.28.29335.0 

	TTL	c:\users\ws103\desktop\zlib-1.2.11\zutil.c
	ARM64

	AREA	|.drectve|, DRECTVE

	EXPORT	|z_errmsg| [ DATA ]
	EXPORT	|??_C@_0BA@MOKMMFOD@need?5dictionary@| [ DATA ] ; `string'
	EXPORT	|??_C@_0L@FNAOCBOG@stream?5end@| [ DATA ] ; `string'
	EXPORT	|??_C@_0L@KIJFAKBJ@file?5error@| [ DATA ] ; `string'
	EXPORT	|??_C@_0N@MKKNPMJD@stream?5error@| [ DATA ] ; `string'
	EXPORT	|??_C@_0L@HAHMBNLP@data?5error@| [ DATA ] ; `string'
	EXPORT	|??_C@_0BE@OGGJBMCE@insufficient?5memory@| [ DATA ] ; `string'
	EXPORT	|??_C@_0N@DFPGLBGC@buffer?5error@| [ DATA ] ; `string'
	EXPORT	|??_C@_0BF@CJFPCCEG@incompatible?5version@| [ DATA ] ; `string'

	AREA	|.rdata|, DATA, READONLY
|??_C@_0BF@CJFPCCEG@incompatible?5version@| DCB "incompatible version", 0x0 ; `string'

	AREA	|.rdata|, DATA, READONLY
|??_C@_0N@DFPGLBGC@buffer?5error@| DCB "buffer error", 0x0 ; `string'

	AREA	|.rdata|, DATA, READONLY
|??_C@_0BE@OGGJBMCE@insufficient?5memory@| DCB "insufficient memory", 0x0 ; `string'

	AREA	|.rdata|, DATA, READONLY
|??_C@_0L@HAHMBNLP@data?5error@| DCB "data error", 0x0	; `string'

	AREA	|.rdata|, DATA, READONLY
|??_C@_0N@MKKNPMJD@stream?5error@| DCB "stream error", 0x0 ; `string'

	AREA	|.rdata|, DATA, READONLY
|??_C@_0L@KIJFAKBJ@file?5error@| DCB "file error", 0x0	; `string'

	AREA	|.rdata|, DATA, READONLY
|??_C@_0L@FNAOCBOG@stream?5end@| DCB "stream end", 0x0	; `string'

	AREA	|.rdata|, DATA, READONLY
|??_C@_0BA@MOKMMFOD@need?5dictionary@| DCB "need dictionary", 0x0 ; `string'
	%	1
|z_errmsg| DCQ	|??_C@_0BA@MOKMMFOD@need?5dictionary@|, 0
	DCQ	|??_C@_0L@FNAOCBOG@stream?5end@|, 0
	DCQ	|??_C@_00CNPNBAHC@@|, 0
	DCQ	|??_C@_0L@KIJFAKBJ@file?5error@|, 0
	DCQ	|??_C@_0N@MKKNPMJD@stream?5error@|, 0
	DCQ	|??_C@_0L@HAHMBNLP@data?5error@|, 0
	DCQ	|??_C@_0BE@OGGJBMCE@insufficient?5memory@|, 0
	DCQ	|??_C@_0N@DFPGLBGC@buffer?5error@|, 0
	DCQ	|??_C@_0BF@CJFPCCEG@incompatible?5version@|, 0
	DCQ	|??_C@_00CNPNBAHC@@|, 0
	EXPORT	|zError|
	EXPORT	|zlibCompileFlags|
	EXPORT	|zlibVersion|
	EXPORT	|zcfree|
	EXPORT	|zcalloc|
; Function compile flags: /Ogtp
; File C:\Users\ws103\Desktop\zlib-1.2.11\zutil.c

	AREA	|.text$mn|, CODE, ARM64

  00000		 |zcalloc| PROC

; 310  :     (void)opaque;
; 311  :     return sizeof(uInt) > 2 ? (voidpf)malloc(items * size) :

  00000	90000009	 adrp        x9,__imp_malloc
  00004	f9400129	 ldr         x9,[x9,PageOffset(__imp_malloc)]
  00008	1b027c20	 mul         w0,w1,w2
  0000c	d61f0120	 br          x9

			 ENDP  ; |zcalloc|

; Function compile flags: /Ogtp
; File C:\Users\ws103\Desktop\zlib-1.2.11\zutil.c

	AREA	|.text$mn|, CODE, ARM64

  00000		 |zcfree| PROC

; 319  :     (void)opaque;
; 320  :     free(ptr);

  00000	90000008	 adrp        x8,__imp_free
  00004	f9400108	 ldr         x8,[x8,PageOffset(__imp_free)]
  00008	aa0103e0	 mov         x0,x1
  0000c	d61f0100	 br          x8

			 ENDP  ; |zcfree|

; Function compile flags: /Ogtp
; File C:\Users\ws103\Desktop\zlib-1.2.11\zutil.c

	AREA	|.text$mn|, CODE, ARM64

  00000		 |zlibVersion| PROC

; 29   :     return ZLIB_VERSION;

  00000	90000008	 adrp        x8,|??_C@_06CJNJFBNP@1?42?411@|
  00004	91000100	 add         x0,x8,PageOffset(|??_C@_06CJNJFBNP@1?42?411@|)
  00008	d65f03c0	 ret

			 ENDP  ; |zlibVersion|

; Function compile flags: /Ogtp
; File C:\Users\ws103\Desktop\zlib-1.2.11\zutil.c

	AREA	|.text$mn|, CODE, ARM64

  00000		 |zlibCompileFlags| PROC

; 34   :     uLong flags;
; 35   : 
; 36   :     flags = 0;
; 37   :     switch ((int)(sizeof(uInt))) {
; 38   :     case 2:     break;
; 39   :     case 4:     flags += 1;     break;
; 40   :     case 8:     flags += 2;     break;
; 41   :     default:    flags += 3;
; 42   :     }
; 43   :     switch ((int)(sizeof(uLong))) {
; 44   :     case 2:     break;
; 45   :     case 4:     flags += 1 << 2;        break;
; 46   :     case 8:     flags += 2 << 2;        break;
; 47   :     default:    flags += 3 << 2;
; 48   :     }
; 49   :     switch ((int)(sizeof(voidpf))) {
; 50   :     case 2:     break;
; 51   :     case 4:     flags += 1 << 4;        break;
; 52   :     case 8:     flags += 2 << 4;        break;
; 53   :     default:    flags += 3 << 4;
; 54   :     }
; 55   :     switch ((int)(sizeof(z_off_t))) {
; 56   :     case 2:     break;
; 57   :     case 4:     flags += 1 << 6;        break;
; 58   :     case 8:     flags += 2 << 6;        break;
; 59   :     default:    flags += 3 << 6;
; 60   :     }
; 61   : #ifdef ZLIB_DEBUG
; 62   :     flags += 1 << 8;
; 63   : #endif
; 64   : #if defined(ASMV) || defined(ASMINF)
; 65   :     flags += 1 << 9;
; 66   : #endif
; 67   : #ifdef ZLIB_WINAPI
; 68   :     flags += 1 << 10;
; 69   : #endif
; 70   : #ifdef BUILDFIXED
; 71   :     flags += 1 << 12;
; 72   : #endif
; 73   : #ifdef DYNAMIC_CRC_TABLE
; 74   :     flags += 1 << 13;
; 75   : #endif
; 76   : #ifdef NO_GZCOMPRESS
; 77   :     flags += 1L << 16;
; 78   : #endif
; 79   : #ifdef NO_GZIP
; 80   :     flags += 1L << 17;
; 81   : #endif
; 82   : #ifdef PKZIP_BUG_WORKAROUND
; 83   :     flags += 1L << 20;
; 84   : #endif
; 85   : #ifdef FASTEST
; 86   :     flags += 1L << 21;
; 87   : #endif
; 88   : #if defined(STDC) || defined(Z_HAVE_STDARG_H)
; 89   : #  ifdef NO_vsnprintf
; 90   :     flags += 1L << 25;
; 91   : #    ifdef HAS_vsprintf_void
; 92   :     flags += 1L << 26;
; 93   : #    endif
; 94   : #  else
; 95   : #    ifdef HAS_vsnprintf_void
; 96   :     flags += 1L << 26;
; 97   : #    endif
; 98   : #  endif
; 99   : #else
; 100  :     flags += 1L << 24;
; 101  : #  ifdef NO_snprintf
; 102  :     flags += 1L << 25;
; 103  : #    ifdef HAS_sprintf_void
; 104  :     flags += 1L << 26;
; 105  : #    endif
; 106  : #  else
; 107  : #    ifdef HAS_snprintf_void
; 108  :     flags += 1L << 26;
; 109  : #    endif
; 110  : #  endif
; 111  : #endif
; 112  :     return flags;

  00000	52808ca0	 mov         w0,#0x465
  00004	d65f03c0	 ret

			 ENDP  ; |zlibCompileFlags|

; Function compile flags: /Ogtp
; File C:\Users\ws103\Desktop\zlib-1.2.11\zutil.c

	AREA	|.text$mn|, CODE, ARM64

  00000		 |zError| PROC

; 136  :     return ERR_MSG(err);

  00000	52800048	 mov         w8,#2
  00004	4b000109	 sub         w9,w8,w0
  00008	9000000a	 adrp        x10,z_errmsg
  0000c	91000148	 add         x8,x10,PageOffset(z_errmsg)
  00010	f869d900	 ldr         x0,[x8,w9 sxtw #3]
  00014	d65f03c0	 ret

			 ENDP  ; |zError|

	END
