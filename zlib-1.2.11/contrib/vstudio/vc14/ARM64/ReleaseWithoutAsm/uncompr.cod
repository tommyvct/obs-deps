; Listing generated by Microsoft (R) Optimizing Compiler Version 19.28.29335.0 

	TTL	c:\users\ws103\desktop\zlib-1.2.11\uncompr.c
	ARM64

	AREA	|.drectve|, DRECTVE

	EXPORT	|uncompress|
	EXPORT	|uncompress2|

	AREA	|.pdata|, PDATA
|$pdata$uncompress| DCD imagerel |$LN4|
	DCD	0x160001d
	;Flags[SingleProEpi] functionLength[28] RegF[0] RegI[0] H[0] frameChainReturn[Chained] frameSize[32]

	AREA	|.pdata|, PDATA
|$pdata$uncompress2| DCD imagerel |$LN30|
	DCD	0x5660155
	;Flags[SingleProEpi] functionLength[340] RegF[0] RegI[6] H[0] frameChainReturn[Chained] frameSize[160]
; Function compile flags: /Ogtp
; File C:\Users\ws103\Desktop\zlib-1.2.11\uncompr.c

	AREA	|.text$mn|, CODE, ARM64

  00000		 |uncompress2| PROC

; 32   : {

  00000		 |$LN30|
  00000	a9bd53f3	 stp         x19,x20,[sp,#-0x30]!
  00004	a9015bf5	 stp         x21,x22,[sp,#0x10]
  00008	a90263f7	 stp         x23,x24,[sp,#0x20]
  0000c	a9b97bfd	 stp         fp,lr,[sp,#-0x70]!
  00010	910003fd	 mov         fp,sp
  00014	aa0103f7	 mov         x23,x1
  00018	aa0303f8	 mov         x24,x3

; 33   :     z_stream stream;
; 34   :     int err;
; 35   :     const uInt max = (uInt)-1;
; 36   :     uLong len, left;
; 37   :     Byte buf[1];    /* for detection of incomplete stream when *destLen == 0 */
; 38   : 
; 39   :     len = *sourceLen;
; 40   :     if (*destLen) {

  0001c	b94002f4	 ldr         w20,[x23]
  00020	b9400315	 ldr         w21,[x24]
  00024	aa0003f6	 mov         x22,x0
  00028	34000014	 cbz         w20,|$LN5@uncompress|

; 41   :         left = *destLen;
; 42   :         *destLen = 0;

  0002c	b90002ff	 str         wzr,[x23]

; 43   :     }

  00030	14000003	 b           |$LN6@uncompress|
  00034		 |$LN5@uncompress|

; 44   :     else {
; 45   :         left = 1;

  00034	52800034	 mov         w20,#1

; 46   :         dest = buf;

  00038	910043f6	 add         x22,sp,#0x10
  0003c		 |$LN6@uncompress|

; 47   :     }
; 48   : 
; 49   :     stream.next_in = (z_const Bytef *)source;
; 50   :     stream.avail_in = 0;
; 51   :     stream.zalloc = (alloc_func)0;
; 52   :     stream.zfree = (free_func)0;
; 53   :     stream.opaque = (voidpf)0;
; 54   : 
; 55   :     err = inflateInit(&stream);

  0003c	90000008	 adrp        x8,|??_C@_06CJNJFBNP@1?42?411@|
  00040	91000101	 add         x1,x8,PageOffset(|??_C@_06CJNJFBNP@1?42?411@|)
  00044	f9000fe2	 str         x2,[sp,#0x18]
  00048	52800b02	 mov         w2,#0x58
  0004c	b90023ff	 str         wzr,[sp,#0x20]
  00050	910063e0	 add         x0,sp,#0x18
  00054	a904ffff	 stp         xzr,xzr,[sp,#0x48]
  00058	f9002fff	 str         xzr,[sp,#0x58]
  0005c	94000000	 bl          inflateInit_

; 56   :     if (err != Z_OK) return err;

  00060	35000000	 cbnz        w0,|$LN1@uncompress|

; 57   : 
; 58   :     stream.next_out = dest;

  00064	f90017f6	 str         x22,[sp,#0x28]

; 59   :     stream.avail_out = 0;

  00068	52800008	 mov         w8,#0
  0006c	b90033ff	 str         wzr,[sp,#0x30]
  00070		 |$LL4@uncompress|

; 60   : 
; 61   :     do {
; 62   :         if (stream.avail_out == 0) {

  00070	35000008	 cbnz        w8,|$LN8@uncompress|

; 63   :             stream.avail_out = left > (uLong)max ? max : (uInt)left;

  00074	3100069f	 cmn         w20,#1
  00078	12800008	 mov         w8,#-1
  0007c	1a948108	 cselhi      w8,w8,w20
  00080	b90033e8	 str         w8,[sp,#0x30]
  00084	4b080294	 sub         w20,w20,w8
  00088		 |$LN8@uncompress|

; 64   :             left -= stream.avail_out;
; 65   :         }
; 66   :         if (stream.avail_in == 0) {

  00088	b94023e8	 ldr         w8,[sp,#0x20]
  0008c	35000008	 cbnz        w8,|$LN9@uncompress|

; 67   :             stream.avail_in = len > (uLong)max ? max : (uInt)len;

  00090	310006bf	 cmn         w21,#1
  00094	12800008	 mov         w8,#-1
  00098	1a958108	 cselhi      w8,w8,w21
  0009c	b90023e8	 str         w8,[sp,#0x20]
  000a0	4b0802b5	 sub         w21,w21,w8
  000a4		 |$LN9@uncompress|

; 68   :             len -= stream.avail_in;
; 69   :         }
; 70   :         err = inflate(&stream, Z_NO_FLUSH);

  000a4	52800001	 mov         w1,#0
  000a8	910063e0	 add         x0,sp,#0x18
  000ac	94000000	 bl          inflate
  000b0	2a0003f3	 mov         w19,w0

; 71   :     } while (err == Z_OK);

  000b4	35000013	 cbnz        w19,|$LN27@uncompress|
  000b8	b94033e8	 ldr         w8,[sp,#0x30]
  000bc	17ffffed	 b           |$LL4@uncompress|
  000c0		 |$LN27@uncompress|

; 72   : 
; 73   :     *sourceLen -= len + stream.avail_in;

  000c0	b9400309	 ldr         w9,[x24]

; 74   :     if (dest != buf)

  000c4	910043ea	 add         x10,sp,#0x10
  000c8	b94023e8	 ldr         w8,[sp,#0x20]
  000cc	eb0a02df	 cmp         x22,x10
  000d0	4b080128	 sub         w8,w9,w8
  000d4	4b150109	 sub         w9,w8,w21
  000d8	b94037e8	 ldr         w8,[sp,#0x34]
  000dc	b9000309	 str         w9,[x24]
  000e0	54000000	 beq         |$LN10@uncompress|

; 75   :         *destLen = stream.total_out;

  000e4	b90002e8	 str         w8,[x23]
  000e8		 |$LN12@uncompress|

; 78   : 
; 79   :     inflateEnd(&stream);

  000e8	910063e0	 add         x0,sp,#0x18
  000ec	94000000	 bl          inflateEnd

; 80   :     return err == Z_STREAM_END ? Z_OK :

  000f0	7100067f	 cmp         w19,#1
  000f4	54000001	 bne         |$LN18@uncompress|
  000f8	52800013	 mov         w19,#0
  000fc	14000010	 b           |$LN15@uncompress|
  00100		 |$LN10@uncompress|

; 76   :     else if (stream.total_out && err == Z_BUF_ERROR)

  00100	34000008	 cbz         w8,|$LN12@uncompress|
  00104	3100167f	 cmn         w19,#5
  00108	54000001	 bne         |$LN12@uncompress|

; 77   :         left = 1;

  0010c	910063e0	 add         x0,sp,#0x18
  00110	52800034	 mov         w20,#1
  00114	94000000	 bl          inflateEnd
  00118	14000005	 b           |$LN23@uncompress|
  0011c		 |$LN18@uncompress|

; 80   :     return err == Z_STREAM_END ? Z_OK :

  0011c	71000a7f	 cmp         w19,#2
  00120	54000000	 beq         |$LN28@uncompress|
  00124	3100167f	 cmn         w19,#5
  00128	54000001	 bne         |$LN15@uncompress|
  0012c		 |$LN23@uncompress|
  0012c	b94033e8	 ldr         w8,[sp,#0x30]
  00130	0b140108	 add         w8,w8,w20
  00134	34000008	 cbz         w8,|$LN15@uncompress|
  00138		 |$LN28@uncompress|
  00138	12800053	 mov         w19,#-3
  0013c		 |$LN15@uncompress|
  0013c	2a1303e0	 mov         w0,w19
  00140		 |$LN1@uncompress|
  00140	a8c77bfd	 ldp         fp,lr,[sp],#0x70
  00144	a94263f7	 ldp         x23,x24,[sp,#0x20]
  00148	a9415bf5	 ldp         x21,x22,[sp,#0x10]
  0014c	a8c353f3	 ldp         x19,x20,[sp],#0x30
  00150	d65f03c0	 ret

			 ENDP  ; |uncompress2|

; Function compile flags: /Ogtp
; File C:\Users\ws103\Desktop\zlib-1.2.11\uncompr.c

	AREA	|.text$mn|, CODE, ARM64

  00000		 |uncompress| PROC

; 91   : {

  00000		 |$LN4|
  00000	a9be7bfd	 stp         fp,lr,[sp,#-0x20]!
  00004	910003fd	 mov         fp,sp
  00008	b90013e3	 str         w3,[sp,#0x10]

; 92   :     return uncompress2(dest, destLen, source, &sourceLen);

  0000c	910043e3	 add         x3,sp,#0x10
  00010	94000000	 bl          uncompress2
  00014	a8c27bfd	 ldp         fp,lr,[sp],#0x20
  00018	d65f03c0	 ret

			 ENDP  ; |uncompress|

	END
